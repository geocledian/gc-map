"use strict";const gcMapLocales={en:{options:{title:"Map options",colormapLabel:"Colormap",imageBrightnessLabel:"Image Brightness",imageTransparencyLabel:"Image Transparency",sliderReset:"Reset",colormap:{default:"Default",vitality:"Vitality",variations:"Variations (relative)",ndvi:"NDVI",ndre1:"NDRE1",ndre2:"NDRE2",ndwi:"NDWI",ndwi_fc:"NDWI (Forest coniferous)",ndwi_fb:"NDWI (Forest broadleaf)",savi:"SAVI",evi2:"EVI2",cire:"CIRE",npcri:"NPCRI",pseudocolor:"Pseudocolor (relative)",redblue:"Red-Blue (relative)",bluered:"Blue-Red (relative)"}},products:{sos:"Start of season",pos:"Peak of season",eos:"End of season",vitality:"Vitality",variations:"Variations",visible:"Visible (RGB)",ndvi:"NDVI",ndre1:"NDRE1",ndre2:"NDRE2",ndwi:"NDWI",savi:"SAVI",evi2:"EVI2",cire:"CIRE",npcri:"NPCRI"},layers:{parcels:"Parcels",images:"Images"},map:{zoomIn:"Zoom in",zoomOut:"Zoom out",searchLabel:"Search location",buttons:{createParcel:{title:"Create new parcel"},deleteParcel:{title:"Delete parcel"},downloadImagePNG:{title:"Download as PNG"},downloadImageTIF:{title:"Download as GeoTiff"},toggleLegend:{title:"Toggle legend"},queryIndexValue:{title:"Query Index value"}},popups:{parcelID:"ParcelID",indexValue:"Index value",value:"Value"},drawControl:{L_drawLocal_draw_toolbar_actions_title:"Cancel Drawing",L_drawLocal_draw_toolbar_actions_text:"Cancel",L_drawLocal_draw_toolbar_finish_title:"Finish  Drawing",L_drawLocal_draw_toolbar_finish_text:"Finish",L_drawLocal_draw_toolbar_undo_title:"Undo Drawing",L_drawLocal_draw_toolbar_undo_text:"Undo",L_drawLocal_draw_toolbar_buttons_polygon:"Draw a Polygon",L_drawLocal_draw_handlers_polygon_tooltip_start:"Click to start drawing shape",L_drawLocal_draw_handlers_polygon_tooltip_cont:"Click to continue drawing shape",L_drawLocal_draw_handlers_polygon_tooltip_end:"Click first point to close this shape",L_drawLocal_edit_toolbar_actions_save_title:"Save changes",L_drawLocal_edit_toolbar_actions_save_text:"Save",L_drawLocal_edit_toolbar_actions_cancel_title:"Cancel editing, discards all changes",L_drawLocal_edit_toolbar_actions_cancel_text:"Cancel",L_drawLocal_edit_toolbar_actions_clearAll_title:"Clear all Layers",L_drawLocal_edit_toolbar_actions_clearAll_text:"Clear All",L_drawLocal_edit_toolbar_buttons_edit:"Edit Layers",L_drawLocal_edit_toolbar_buttons_editDisabled:"No Layers to edit",L_drawLocal_edit_toolbar_buttons_remove:"Delete Layers",L_drawLocal_edit_toolbar_buttons_removeDisabled:"No layers to delete",L_drawLocal_edit_handlers_edit_tooltip_text:"Drag handles or markers to edit features",L_drawLocal_edit_handlers_edit_tooltip_subtext:"Click cancel to undo changes",L_drawLocal_edit_handlers_remove_tooltip_text:"Click on a feature to remove"}},legend:{},newParcel:{title:"New parcel attributes",apikey:"API Key",crop:"Crop",entity:"Entity",name:"Name",seeding:"Seeding",harvest:"Harvest",promotion:"Promotion",register:"Register parcel",date_format_hint:"YYYY-MM-DD"},api_msg:{unauthorized_key:"Sorry, the given API key is not authorized!",invalid_key:"Sorry, the given API key's validity expired!",support:"Please contact <a href='https://www.geocledian.com'>geo|cledian</a> for support.",new_parcel_msg_ok:"",new_parcel_msg_err:""}},de:{options:{title:"Kartenoptionen",colormapLabel:"Farbgebung",imageBrightnessLabel:"Bild - Helligkeit",imageTransparencyLabel:"Bild - Transparenz",sliderReset:"Zurücksetzen",colormap:{default:"Standard",vitality:"Vitalität",variations:"Variabilität (relativ)",ndvi:"NDVI",ndre1:"NDRE1",ndre2:"NDRE2",ndwi:"NDWI",ndwi_fc:"NDWI (Nadelwald)",ndwi_fb:"NDWI (Laubwald)",savi:"SAVI",evi2:"EVI2",cire:"CIRE",npcri:"NPCRI",pseudocolor:"Pseudofarben (relativ)",redblue:"Rot-Blau (relativ)",bluered:"Blau-Rot (relativ)"}},products:{sos:"Saisonbeginn",pos:"Saisonales Maximum",eos:"Saisonende",vitality:"Vitalität",variations:"Zonen",visible:"Foto",ndvi:"NDVI",ndre1:"NDRE1",ndre2:"NDRE2",ndwi:"Wassergehalt",savi:"SAVI",evi2:"EVI2",cire:"Blattfläche",npcri:"NPCRI"},layers:{parcels:"Felder",images:"Bilder"},map:{zoomIn:"Hineinzoomen",zoomOut:"Herauszoomen",searchLabel:"Suche nach Ort",buttons:{createParcel:{title:"Neues Feld erzeugen"},deleteParcel:{title:"Feld löschen"},downloadImagePNG:{title:"Download als PNG"},downloadImageTIF:{title:"Download als GeoTiff"},toggleLegend:{title:"Legende an/aus"},queryIndexValue:{title:"Indexwert abfragen"}},popups:{parcelID:"Parcel Nr",indexValue:"Index Wert",value:"Wert"},drawControl:{L_drawLocal_draw_toolbar_actions_title:"Zeichnung abbrechen",L_drawLocal_draw_toolbar_actions_text:"Abbrechen",L_drawLocal_draw_toolbar_finish_title:"Zeichnung beenden",L_drawLocal_draw_toolbar_finish_text:"Beenden",L_drawLocal_draw_toolbar_undo_title:"Zeichnung rückgängig machen",L_drawLocal_draw_toolbar_undo_text:"Rückgängig",L_drawLocal_draw_toolbar_buttons_polygon:"Ein Polygon zeichnen",L_drawLocal_draw_handlers_polygon_tooltip_start:"Klicken um eine Zeichnung zu starten",L_drawLocal_draw_handlers_polygon_tooltip_cont:"Klicken um die Zeichnung fortzuführen",L_drawLocal_draw_handlers_polygon_tooltip_end:"Ersten Punkt anklicken, um das Polygon zu schließen",L_drawLocal_edit_toolbar_actions_save_title:"Änderungen speichern",L_drawLocal_edit_toolbar_actions_save_text:"Speichern",L_drawLocal_edit_toolbar_actions_cancel_title:"Bearbeitung abbrechen, alle Änderungen verwerfen",L_drawLocal_edit_toolbar_actions_cancel_text:"Abbrechen",L_drawLocal_edit_toolbar_actions_clearAll_title:"Inhalte in allen Layern leeren",L_drawLocal_edit_toolbar_actions_clearAll_text:"Alles leeren",L_drawLocal_edit_toolbar_buttons_edit:"Layer bearbeiten",L_drawLocal_edit_toolbar_buttons_editDisabled:"Keine Layer zu bearbeiten",L_drawLocal_edit_toolbar_buttons_remove:"Layer löschen",L_drawLocal_edit_toolbar_buttons_removeDisabled:"Keine Layer zu löschen",L_drawLocal_edit_handlers_edit_tooltip_text:"Markierungen ziehen, um Objekte zu bearbeiten",L_drawLocal_edit_handlers_edit_tooltip_subtext:"Abbrechen klicken, um die Änderungen rückgängig zu machen",L_drawLocal_edit_handlers_remove_tooltip_text:"Auf ein Objekt klicken, um es zu löschen"}},legend:{},newParcel:{title:"Neues Feld - Attribute",apikey:"API Schlüssel",crop:"Fruchtart",entity:"Entität",name:"Name",seeding:"Pflanzung",harvest:"Ernte",promotion:"Demo",register:"Feld registrieren",date_format_hint:"JJJJ-MM-TT"},api_msg:{unauthorized_key:"Tut uns leid, der angegebene API Schlüssel existiert nicht!",invalid_key:"Tut uns leid, die Gültigkeit des angegebenen API Schlüssels ist abgelaufen.",support:"Bitte kontaktieren Sie <a href='https://www.geocledian.com'>geo|cledian</a> für weitere Unterstützung.",new_parcel_msg_ok:"",new_parcel_msg_err:""}}};Date.prototype.addDays=function(e){var t=new Date(this.valueOf());return t.setDate(t.getDate()+e),t},Date.prototype.simpleDate=function(){var e=this.getFullYear(),t=this.getMonth()+1,i=this.getDate();return e+"-"+(1===t.toString().length?"0"+t:t)+"-"+(1===i.toString().length?"0"+i:i)},Vue.config.silent=!1,Vue.component("gc-map",{props:{gcWidgetId:{type:String,default:"map1",required:!0},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},gcProxy:{type:String,default:void 0},gcApiBaseUrl:{type:String,default:"/agknow/api/v3"},gcApiSecure:{type:Boolean,default:!0},gcCurrentParcelId:{type:Number,default:-1},gcBasemap:{type:String,default:"osm"},gcDataSource:{type:String,default:""},gcAvailableProducts:{type:String,default:"visible,vitality,variations,ndvi,ndwi,ndre1,ndre2,savi,evi2,cire,npcri"},gcImageChangeInterval:{type:String,default:"800"},gcAvailableTools:{type:String,default:"edit,delete,query,legend,downloadImage,productSelector,video"},gcAvailableOptions:{type:String,default:"optionsTitle,colorMap,imageBrightness,imageTransparency"},gcOptionsCollapsed:{type:Boolean,default:!0},gcLanguage:{type:String,default:"en"},gcSelectedDate:{type:String,default:""},gcSelectedProduct:{type:String,default:""},gcInitialLoading:{type:Boolean,default:!0},gcDrawcontrolPosition:{type:String,default:"bottomleft"},gcLegendPosition:{type:String,default:"topright"}},template:'<div :id="this.gcWidgetId" class="is-inline">\n\n              <div class="level" style="margin-bottom: 0px;">\n           \n              <p class="gc-options-title is-inline is-size-6 is-orange" \n                  style="margin-bottom: 1.0rem; cursor: pointer;" \n                  v-on:click="toggleMapOptions"\n                  v-if="availableOptions.includes(\'optionsTitle\')">\n               {{$t("options.title")}}\n               <i :class="[gcOptionsCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n              </p>\n\n              \x3c!-- watermark --\x3e\n              <div class="is-inline-block" style="opacity: 0.65; margin-bottom: 0.5rem;" \n                v-if="!availableOptions.includes(\'nologo\')">\n                <span style="font-size: 0.7rem;">powered by</span><br>\n                <img src="img/logo.png" alt="geo|cledian" style="width: 100px; margin: -10px 0;">\n              </div>\n\n              </div>\n\n              <div :id="\'mapOptions_\'+gcWidgetId" :class="[gcOptionsCollapsed ? \'is-hidden\': \'\', \'mapOptions\', \'is-horizontal\', \'is-flex\']">\n              <div class="is-horizontal is-flex">\n                <div class="field is-vertical" v-show="availableOptions.includes(\'colorMap\')">\n                  <div class="field-label">\n                    <label class="label has-text-left is-grey"> {{$t("options.colormapLabel")}} </label></div>\n                  <div class="control">\n                    <div class="select is-small">\n                      <select v-model="colormap" :disabled="this.colormapEnabled === false">\n                          <option value="" selected>{{$t("options.colormap.default")}}</option>\n                          <option value="variations">{{$t("options.colormap.variations")}}</option>\n                          <option value="vitality">{{$t("options.colormap.vitality")}}</option>\n                          <option value="ndvi">{{$t("options.colormap.ndvi")}}</option>\n                          <option value="ndre1">{{$t("options.colormap.ndre1")}}</option>\n                          <option value="ndre2">{{$t("options.colormap.ndre2")}}</option>\n                          <option value="ndwi">{{$t("options.colormap.ndwi")}}</option>\n                          <option value="ndwi_fc">{{$t("options.colormap.ndwi_fc")}}</option>\n                          <option value="ndwi_fb">{{$t("options.colormap.ndwi_fb")}}</option>\n                          <option value="savi">{{$t("options.colormap.savi")}}</option>\n                          <option value="evi2">{{$t("options.colormap.evi2")}}</option>\n                          <option value="cire">{{$t("options.colormap.cire")}}</option>\n                          <option value="npcri">{{$t("options.colormap.npcri")}}</option>\n                          <option value="pseudocolor">{{$t("options.colormap.pseudocolor")}}</option>\n                          <option value="redblue">{{$t("options.colormap.redblue")}}</option>\n                          <option value="bluered">{{$t("options.colormap.bluered")}}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                \x3c!-- image options --\x3e\n                <div class="field is-vertical">\n                \x3c!-- brightness only available for visible product --\x3e\n                <div class="field" v-show="availableOptions.includes(\'imageBrightness\') && this.selectedProduct === \'visible\'">\n                  <div class="field-label">\n                    <label class="label has-text-left is-grey"> {{$t("options.imageBrightnessLabel")}} </label></div>\n                  <div class="control">\n                    <div class="is-small">\n                      <input :id="\'inpBrightnessSlider_\' + this.gcWidgetId" type="range" class="slider is-small is-orange" min="0.5" max="15.0" value="1.0" step="0.1" \n                          v-model="imageBrightness">\n                      <button class="button is-small is-orange is-light" style="vertical-align: middle !important;" :title="$t(\'options.sliderReset\')" v-on:click="imageBrightness=1.0;">\n                        <i class="fas fa-undo fa"></i>\n                      </button>\n                    </div>\n                  </div>\n              </div>\n              <div class="field" v-show="availableOptions.includes(\'imageTransparency\')">\n                <div class="field-label">\n                  <label class="label has-text-left is-grey"> {{$t("options.imageTransparencyLabel")}} </label></div>\n                <div class="control">\n                  <div class="is-small">\n                    <input :id="\'inpTransparencySlider_\'+ this.gcWidgetId" type="range" class="slider is-small is-orange" min="0.0" max="1.0" value="0.0" step="0.1"\n                        v-model="imageTransparency">\n                    <button class="button is-small is-orange is-light" style="vertical-align: middle !important;" :title="$t(\'options.sliderReset\')" v-on:click="imageTransparency=0.0;">\n                      <i class="fas fa-undo fa"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\x3c!-- image options --\x3e\n            </div>\x3c!-- map options --\x3e\n\n            \x3c!-- attributive css here --\x3e\n            <div gc-map class="notification gc-api-message" v-show="this.api_err_msg.length > 0" v-html="this.api_err_msg"></div>\n\n            \x3c!-- container for map and newParcel div --\x3e\n            <div :id="\'innerContainer_\'+ this.gcWidgetId" class="is-inline">\n\n            <div :id="\'map_\'+ this.gcWidgetId" class="gc-map" v-show="this.api_err_msg.length==0">\n            \x3c!-- mobile: onclick and onblur events instead of onmouseover and onmouseout --\x3e\n            <div :id="\'layerControl_\'+gcWidgetId" class="layerControl" v-on:mouseover="growLayerControl" \n                                    v-on:mouseout="shrinkLayerControl" \n                                    v-on:click="growLayerControl" \n                                    v-on:blur="shrinkLayerControl">\n              <button gc-map :id="\'btnLayerControl_\'+gcWidgetId" class="button is-light is-orange">\n                <img src="img/layers.png" width="18px" height="18px">\n              </button>\n              <div :id="\'layerControlContent_\'+gcWidgetId" class="layerControlContent is-hidden" style="display: inline-grid;">\n                <input :id="\'rdBasemap1_\'+gcWidgetId" type="radio" class="is-checkradio is-orange is-small" :name="\'basemap_\'+gcWidgetId" \n                    value="arcgis" v-model="currentBasemap"  v-if="this.isArcGISValid">\n                <label :for="\'rdBasemap1_\'+gcWidgetId" class="is-orange is-small"  v-if="this.isArcGISValid">ArcGIS Online</label>\n                <input :id="\'rdBasemap2_\'+gcWidgetId" type="radio" class="is-checkradio is-orange is-small" :name="\'basemap_\'+gcWidgetId" \n                value="osm" v-model="currentBasemap"> \n                <label :for="\'rdBasemap2_\'+gcWidgetId" class="is-orange is-small">OpenstreetMap</label>\n                <input :id="\'rdBasemap3_\'+gcWidgetId" type="radio" class="is-checkradio is-orange is-small" :name="\'basemap_\'+gcWidgetId"\n                    value="google" v-model="currentBasemap" v-if="isGoogleValid"> \n                <label :for="\'rdBasemap3_\'+gcWidgetId" class="is-orange is-small" v-if="isGoogleValid">Google Hybrid</label>\n              <hr>\n                <input :id="\'cbOperational1_\'+gcWidgetId" type="checkbox" class="is-checkradio is-orange is-small"\n                  v-model="parcelLayerVisible">\n                <label :for="\'cbOperational1_\'+gcWidgetId" class="is-orange is-small">{{$t("layers.parcels")}}</label>\n                <input :id="\'cbOperational2_\'+gcWidgetId" type="checkbox" class="is-checkradio is-orange is-small" \n                    v-model="imageLayerVisible"> \n                <label :for="\'cbOperational2_\'+gcWidgetId" class="is-orange is-small">{{$t("layers.images")}}</label>\n              </div>\n            </div>\x3c!-- layerControl --\x3e\n\n            <div :id="\'divMapBtns_\'+gcWidgetId" class="divMapBtns" style="padding-top: 42px; padding-left: 6px; float: left;">\n                <button gc-map :title="$t(\'map.buttons.createParcel.title\')" :class="[this.activeMapActions.includes(\'edit\') ? [\'is-dark\', \'is-active\'] : \'is-light\', \'button\', \'is-orange\']" \n                        v-on:click="createParcelAction" v-show="availableTools.includes(\'edit\')">\n                  <i class="fas fa-edit"></i>\n                </button>\n              \n              <button gc-map :id="\'btnDeleteParcel_\'+gcWidgetId" :title="$t(\'map.buttons.deleteParcel.title\')" class="button is-light is-orange" \n                      v-on:click="deleteParcelAction" v-show="availableTools.includes(\'delete\')" disabled>\n                <i class="fas fa-trash-alt"></i>\n              </button>\n              \n                <button gc-map :id="\'btnQueryIndexValue_\'+this.gcWidgetId" :title="$t(\'map.buttons.queryIndexValue.title\')" :class="[this.activeMapActions.includes(\'query\') ? [\'is-dark\', \'is-active\'] : \'is-light\', \'button\', \'is-orange\']"\n                      v-on:click="queryIndexValueAction" v-show="availableTools.includes(\'query\')" disabled>\n                  <i class="fas fa-info-circle"></i>\n                </button>\n                <button gc-map :id="\'btnToggleLegend_\'+gcWidgetId" :title="$t(\'map.buttons.toggleLegend.title\')" :class="[this.activeMapActions.includes(\'legend\') ? [\'is-dark\', \'is-active\'] : \'is-light\', \'button\', \'is-orange\']"\n                      v-on:click="toggleLegend"\n                      v-on:mouseover=""\n                      v-if="availableTools.includes(\'legend\')">\n                  <i class="fas fa-list-ul"></i>\n                </button>\n                \x3c!-- URL will be injected here in the a-tags after sucessful load of raster in map --\x3e\n                \x3c!-- Download is implemented this way because png is shown in browser per default; but it\n                      should download the image directly --\x3e\n                <div :id="\'downloadImage_\'+gcWidgetId" class="downloadImage has-text-centered"\n                                                                 v-if="availableTools.includes(\'downloadImage\')"\n                                                                  v-on:mouseover="growImageControl" \n                                                                  v-on:mouseout="shrinkImageControl" \n                                                                  v-on:click="growImageControl" \n                                                                  v-on:blur="shrinkImageControl">\n\n                  <button gc-map :id="\'btnDownloadImage_\'+gcWidgetId" class="button is-orange is-light">\n                    <i class="fas fa-download"></i>\n                  </button>\n                  <div :id="\'downloadImageContent_\'+gcWidgetId" class="is-hidden" style="display: inline-grid;">\n                    <a gc-map :id="\'btnDownloadImagePng_\'+gcWidgetId" :title="$t(\'map.buttons.downloadImagePNG.title\')" class="button is-light is-orange" \n                        href="" download="" target="_blank" style="padding-left: 0.45rem; padding-right: 0.45rem;">\n                        \x3c!-- line-height: 0.75rem; --\x3e\n                        <div style="display: inline-grid; vertical-align: middle;">\n                          <span class="is-size-7" style="line-height: 0.75rem;"><i class="fas fa-download"></i></span>\n                          <span class="is-size-7" style="line-height: 0.75rem;">png</span>\n                        </div>\n                      </a>\n                    <a gc-map :id="\'btnDownloadImageTif_\'+gcWidgetId" :title="$t(\'map.buttons.downloadImageTIF.title\')" class="button is-light is-orange" \n                      href="" download="" target="_blank" style="padding-left: 0.45rem; padding-right: 0.45rem;">\n                      <div style="display: inline-grid; vertical-align: middle;">\n                        <span class="is-size-7" style="line-height: 0.75rem;"><i class="fas fa-download"></i></span>\n                        <span class="is-size-7" style="line-height: 0.75rem;">tif</span>\n                      </div>\n                    </a>\n                  </span>\n                  </div>\n                </div>\n              \x3c!--/div --\x3e\n            </div>\n\n            <div class="mapSpinner spinner" v-show="this.isloading">\n              <div class="rect1"></div>\n              <div class="rect2"></div>\n              <div class="rect3"></div>\n              <div class="rect4"></div>\n              <div class="rect5"></div>\n            </div>\n\n            <div :id="\'mapLegendContent_\'+gcWidgetId" \n                  :class="[gcLegendPosition === \'topright\' ? \'topright\' : \'bottomleft\', \'mapLegendContent\',\'has-text-justified\',\'is-hidden\']">\n            </div>\n\n            \x3c!-- product selector --\x3e\n            <div class="field product-selector"\n                  v-if="availableTools.includes(\'productSelector\')">\n              <div class="control">\n                <div class="select is-small">\n                <select v-model="selectedProduct" class="is-small">\n                  <option v-for="p in availableProducts" v-bind:value="p">\n                    <span>{{ $t(\'products.\'+p)}}</span>\n                  </option>\n                </select>\n                </div>\n              </div>\n            </div> \x3c!-- product selector --\x3e\n\n          </div>\x3c!-- map --\x3e\n          \x3c!-- divCreateParcel --\x3e\n          \x3c!-- flex-grow 1 is looks better for aligning label and field --\x3e\n          <div class="is-hidden" :id="\'divCreateParcel_\'+this.gcWidgetId" style="margin-top: 0.75em; margin-left: 1em; margin-right: 1em; flex-grow: 1 !important;"> \n              <p class="subtitle is-6 is-orange"><i class="fas fa-plus-circle fa-lg"></i> {{ $t(\'newParcel.title\') }} </p>  \n              <div class="field is-horizontal">\n                <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.apikey\') }} </label></div>\n                <div class="control">\n                  <input type="text" class="input is-small"\n                          placeholder="[00000000-0000-0000-0000-00000000000]" v-model="newParcel.key">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.crop\') }} </label></div>\n                <div class="control">\n                    <input type="text" class="input is-small"\n                          :placeholder="\'[\'+$t(\'newParcel.crop\')+\']\'" v-model="newParcel.crop">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.seeding\') }} </label></div>\n                <div class="control">\n                    <input :id="\'inpPlantDate_\'+ gcWidgetId" type="text" class="input is-small"\n                          :placeholder="\'[\' + $t(\'newParcel.date_format_hint\') +\']\'" v-model="newParcel.planting" v-on:change="">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                  <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.harvest\') }}</label></div>\n                  <div class="control">\n                      <input :id="\'inpHarvestDate_\'+ gcWidgetId" type="text" class="input is-small"\n                          :placeholder="\'[\' + $t(\'newParcel.date_format_hint\') +\']\'" v-model="newParcel.harvest" v-on:change="">\n                  </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.name\') }} </label></div>\n                <div class="control">\n                    <input type="text" class="input is-small"\n                    :placeholder="\'[\'+$t(\'newParcel.name\')+\']\'" v-model="newParcel.name">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.entity\') }} </label></div>\n                <div class="control">\n                  <input type="text" class="input is-small"\n                  :placeholder="\'[\'+$t(\'newParcel.entity\')+\']\'" v-model="newParcel.entity">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-small"><label class="label is-grey has-text-left"> {{ $t(\'newParcel.promotion\') }} </label></div>\n                <div class="control" style="position: relative; top: 0.5rem;"> \x3c!-- centers checkbox --\x3e\n                  <input type="checkbox" class="content is-small"\n                            v-model="newParcel.promotion">\n                </div>\n              </div>\n              <div class="has-text-centered">\n                <button :id="\'btnRegisterParcel_\'+this.gcWidgetId" class="button is-light is-orange" v-on:click="registerParcel()">\n                    <i class="fas fa-save fa-sm"></i><span class="content"> {{ $t(\'newParcel.register\') }} </span>\n                </button>\n              </div>\n              <div :id="\'divNewParcelMsg_\'+this.gcWidgetId" class="notification is-light is-grey is-normal is-hidden">\n                {{ this.api_msg }}\n              </div>\n            </div>\x3c!-- divCreateParcel --\x3e\n\n            </div>\n            \x3c!-- container for map and newParcel div --\x3e\n\n            <div :id="\'timelineContainer_\'+this.gcWidgetId" class="" v-show="availableTools.includes(\'video\') && !activeMapActions.includes(\'edit\')">\n            \x3c!-- video --\x3e\n            <div :id="\'player_\'+this.gcWidgetId" class="gc-player is-pulled-left" style="z-index: 1000; position: relative; left: 0px; bottom: 0px; margin-bottom: 0px!important;">\n              <button id="btnPlayerOnOff" class="button is-outlined is-orange" \n                          v-on:click="startPauseVideo" style="height: 48px!important; width: 42px!important;" disabled>\n                    <i class="fas fa-play"></i>\n              </button>\n              \x3c!-- button id="btnPlayerBackward" class="button is-outlined is-orange is-small" v-on:click="backwardTimeSeries" \n                          >\n                    <i class="fas fa-step-backward"></i>\n              </button>\n              <button id="btnPlayerForward" class="button is-outlined is-orange is-small" v-on:click="forwardTimeSeries" \n                      >\n                <i class="fas fa-step-forward"></i>\n              </button --\x3e\n            </div>\n            <div :id="\'timeline_\'+this.gcWidgetId">\n            </div>\n            </div>\n            </div>\x3c!-- gcWidgetId --\x3e',data:function(){return{mymap:{},osmBasemap:{},esriBasemap:{},googleHybridBasemap:{},baseMaps:{arcgis:{},osm:{},google:{}},geojsonFeature:{},parcelLayer:{},imageLayer:void 0,imageLayerGroup:{},drawnItems:{},drawControl:void 0,newParcel:{key:"",geometry:"",crop:"",planting:"",harvest:"",name:"",entity:"",id:"",status:""},parcelLayerVisible:!0,imageLayerVisible:!0,colormap:"",colormapEnabled:!0,imageBrightness:1,imageTransparency:0,currentBasemap:this.gcBasemap,currentRasterIndex:0,internalCurrentParcelID:-1,internalSelectedProduct:"",parcels:[],offset:0,pagingStep:250,total_parcel_count:250,popup:void 0,lastLatLng:{lat:0,lng:0},timeline:void 0,isPlaying:!1,myTimer:{},currentTimeSliderPosition:0,inpPlantDatePicker:void 0,inpHarvestDatePicker:void 0,zoomControl:void 0,searchControl:void 0,currentTimeseries:[],isGoogleValid:!0,isArcGISValid:!1,isloading:!1,api_err_msg:"",activeMapActions:[]}},computed:{apiKey:{get:function(){return this.gcApikey}},apiHost:{get:function(){return this.gcHost}},apiBaseUrl:{get:function(){return this.gcApiBaseUrl}},apiSecure:{get:function(){return this.gcApiSecure}},currentParcelID:{get:function(){return-1===this.gcCurrentParcelId?this.internalCurrentParcelID:this.gcCurrentParcelId},set:function(e){this.$root.$emit("currentParcelIdChange",e),-1===this.gcCurrentParcelId&&(this.internalCurrentParcelID=e)}},availableProducts:{get:function(){return this.filterDatasourceProductCompat(this.selectedSource,this.gcAvailableProducts.split(","))}},selectedSource:{get:function(){return this.gcDataSource},set:function(e){this.$root.$emit("dataSourceChange",e)}},availableTools:{get:function(){return this.gcAvailableTools.split(",")}},selectedDate:{get:function(){return this.gcSelectedDate},set:function(e){console.debug("selectedDate - setter: "+e),this.$root.$emit("queryDateChange",e)}},currentDate:{get:function(){var e=this.getCurrentParcel();if(e&&e.timeseries&&this.currentRasterIndex>=0)return e.timeseries[this.currentRasterIndex].date},set:function(e){if(this.isDateValid(e)){if(this.currentParcelID>0){var t=this.getCurrentParcel();if(t&&t.timeseries){let t=this.getClosestTimeSeriesIndex(new Date(e).simpleDate());t>=0&&(this.currentRasterIndex=t)}}}else console.error("currentDate - setter: date invalid: "+e)}},availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}},selectedProduct:{get:function(){return["sos","eos","pos"].includes(this.gcSelectedProduct)&&this.availableProducts.includes("ndvi")?"ndvi":this.gcSelectedProduct.length>0?this.gcSelectedProduct:this.internalSelectedProduct},set:function(e){this.internalSelectedProduct=e,this.$root.$emit("selectedProductChange",e)}}},i18n:{locale:this.currentLanguage,messages:gcMapLocales},created:function(){console.debug("gc-map created!"),this.changeLanguage()},mounted:function(){console.debug("gc-map - mounted!"),this.$root.$on("containerSizeChange",this.containerSizeChange);try{this.changeLanguage()}catch(e){}this.initMap()},watch:{currentBasemap:function(e,t){console.debug("event - currentBasemapChange"),console.debug("new: "+e);let i=this.baseMaps[t];this.mymap.removeLayer(i);let a=this.baseMaps[e];this.mymap.addLayer(a)},selectedProduct:function(e,t){if(e!=t)if(console.debug("event - selectedProductChange"),this.toggleColormapOptions(this.selectedProduct),this.currentParcelID>0&this.parcels.length>0&&this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.selectedProduct,this.selectedSource),"visible"!=e)console.debug("enabling btnQueryIndexValue"),document.getElementById("btnQueryIndexValue_"+this.gcWidgetId).disabled=!1,document.getElementById("btnToggleLegend_"+this.gcWidgetId).disabled=!1;else{console.debug("disabling btnQueryIndexValue");try{this.disableQueryBtn()}catch(e){}document.getElementById("btnQueryIndexValue_"+this.gcWidgetId).disabled=!0,document.getElementById("btnToggleLegend_"+this.gcWidgetId).disabled=!0}},selectedSource:function(e,t){console.debug("event - selectedSourceChange"),this.map_removeAllRasters(),this.getCurrentParcel().timeseries=[],this.currentParcelID>0&this.parcels.length>0&&(this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.selectedProduct,this.selectedSource),this.currentRasterIndex=0)},currentParcelID:function(e,t){console.debug("event - parcelIdChange"),this.handleCurrentParcelIDchange(e,t)},currentRasterIndex:function(e,t){if(e!=t){console.debug("event - currentRasterIndexChange"),this.currentTimeSliderPosition=parseInt(e),this.showCurrentRaster();let t=this.getCurrentParcel();t&&this.showCurrentTimeMarker(t.timeseries[e].date),this.activeMapActions.includes("query")&&this.getIndexValueforCoordinate(this.lastLatLng)}},parcelLayerVisible:function(e,t){console.debug("event - parcelLayerVisibleChange"),!0===e?this.mymap.addLayer(this.parcelLayer):this.mymap.removeLayer(this.parcelLayer)},imageLayerVisible:function(e,t){console.debug("event - imageLayerVisibleChange"),e!=t&&(!0===e?this.imageLayerGroup.addTo(this.mymap):this.imageLayerGroup.removeFrom(this.mymap))},offset:function(e,t){console.debug("event - offsetChange")},colormap:function(e,t){e!=t&&this.showCurrentRaster()},imageBrightness:function(e,t){if(e!=t){let t="brightness("+e+") opacity("+(1-this.imageTransparency)+")",a=document.getElementById("map_"+this.gcWidgetId).getElementsByClassName("leaflet-image-layer");for(var i=0;i<a.length;i++)a[i].style.filter=t}},imageTransparency:function(e,t){if(e!=t){let t="brightness( "+this.imageBrightness+") opacity("+(1-e)+")",a=document.getElementById("map_"+this.gcWidgetId).getElementsByClassName("leaflet-image-layer");for(var i=0;i<a.length;i++)a[i].style.filter=t}},parcels(e,t){this.$root.$emit("parcelsChange",e)},currentLanguage(e,t){this.changeLanguage(),this.parcels.length>0&&this.activeMapActions.includes("legend")&&this.addLegendControl(this.mymap),this.initZoomControl(),this.initSearchControl(),this.drawControl&&this.initDrawControl(),this.initDatePickers()},gcSelectedDate(e,t){console.debug("gcSelectedDateChange"),this.currentDate=e},currentTimeseries(e,t){console.debug("timeseriesChange"),console.debug(e),this.$root.$emit("timeseriesChange",e)}},methods:{getApiUrl:function(e,t){let i="http";return this.apiSecure&&(i+="s"),"POST"===t?this.gcProxy?i+"://"+this.gcProxy+this.apiBaseUrl+e:i+"://"+this.gcHost+this.apiBaseUrl+e:this.gcProxy?i+"://"+this.gcProxy+this.apiBaseUrl+e:i+"://"+this.gcHost+this.apiBaseUrl+e+"?key="+this.apiKey},initMap:function(){console.debug("initMap()");try{this.mymap=L.map("map_"+this.gcWidgetId,{zoomControl:!1})}catch(e){return console.error("Error initializing the map with id '"+this.gcWidgetId+"'!"),this.$el.innerHTML="",void this.$destroy()}this.popup=L.popup({autoClose:!0,closeOnClick:!1}).setContent('<span class="is-large"><b>'+this.$t("map.popups.indexValue")+": "),this.selectedProduct=this.availableProducts[0];if(this.osmBasemap=new L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:18,attribution:'<a href="https://www.openstreetmap.org/">OpenstreetMap</a>'}),this.isArcGISValid){let e="https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",t='Powered by <a href="https://www.esri.com/">ESRI</a> | i-cubed, USDA, USGS, AEX, GeoEye, Getmapping,  Earthstar Geographics, Aerogrid, IGN, IGP, UPR-EGP, Microsoft, DigitalGlobe and the GIS User Community';this.esriBasemap=new L.tileLayer(e,{maxZoom:20,attribution:t})}try{this.googleHybridBasemap=L.gridLayer.googleMutant({type:"hybrid"}),this.isArcGISValid?this.baseMaps={arcgis:this.esriBasemap,osm:this.osmBasemap,google:this.googleHybridBasemap}:this.baseMaps={osm:this.osmBasemap,google:this.googleHybridBasemap},"google"==this.currentBasemap&&this.googleHybridBasemap.addTo(this.mymap),"osm"==this.currentBasemap&&this.osmBasemap.addTo(this.mymap),this.isArcGISValid&&"arcgis"==this.currentBasemap&&this.esriBasemap.addTo(this.mymap)}catch(e){console.warn("Could not init Google API!"),this.isGoogleValid=!1,this.isArcGISValid?(this.baseMaps={arcgis:this.esriBasemap,osm:this.osmBasemap},"osm"==this.currentBasemap&&this.osmBasemap.addTo(this.mymap),"arcgis"==this.currentBasemap&&this.esriBasemap.addTo(this.mymap)):(this.baseMaps={osm:this.osmBasemap},"osm"==this.currentBasemap&&this.osmBasemap.addTo(this.mymap))}this.parcelLayer=L.geoJson().addTo(this.mymap),this.imageLayerGroup=L.layerGroup().addTo(this.mymap),this.drawnItems=(new L.FeatureGroup).addTo(this.mymap),this.mymap.on("draw:created",function(e){this.drawnItems.clearLayers(),this.drawnItems.addLayer(e.layer),this.newParcel.geometry=this.drawnItems.toGeoJSON().features[0].geometry}.bind(this)),this.mymap.on("draw:edited",function(e){this.newParcel.geometry=e.layers.toGeoJSON().features[0].geometry,console.debug(this.newParcel.geometry)}.bind(this)),this.mymap.on("draw:drawstart",function(e){this.drawnItems.clearLayers()}.bind(this)),this.initZoomControl(),this.mymap.setView(new L.LatLng(48.535,12.152),10),this.addControlPlaceholders(this.mymap),this.initSearchControl(),!0===this.gcInitialLoading&&(console.debug("initial data loading"),this.getParcelTotalCount(this.filterString)),document.addEventListener("keyup",e=>{"Space"===e.code&&this.startPauseVideo()}),this.initDatePickers()},destroyMap(){this.mymap&&(this.mymap.off(),this.mymap.remove())},initZoomControl(){this.zoomControl&&this.mymap.removeControl(this.zoomControl),this.zoomControl=new L.Control.Zoom({position:"bottomright",zoomInTitle:this.$t("map.zoomIn"),zoomOutTitle:this.$t("map.zoomOut")}).addTo(this.mymap)},initSearchControl(){this.searchControl&&this.mymap.removeControl(this.searchControl);let e=new window.GeoSearch.OpenStreetMapProvider;this.searchControl=new window.GeoSearch.GeoSearchControl({provider:e,autoComplete:!0,autoCompleteDelay:250,animateZoom:!0,autoClose:!0,searchLabel:this.$t("map.searchLabel"),keepResult:!0,position:"bottomright"}).addTo(this.mymap)},initDatePickers(){this.inpPlantDatePicker&&this.inpPlantDatePicker.destroy(),this.inpPlantDatePicker=new bulmaCalendar(document.getElementById("inpPlantDate_"+this.gcWidgetId),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:this.gcLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var t=new Date(e.valueOf()+864e5);this.newParcel.planting=t.toISOString().split("T")[0]}.bind(this)}),this.inpHarvestDatePicker&&this.inpHarvestDatePicker.destroy(),this.inpHarvestDatePicker=new bulmaCalendar(document.getElementById("inpHarvestDate_"+this.gcWidgetId),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:this.gcLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var t=new Date(e.valueOf()+864e5);this.newParcel.harvest=t.toISOString().split("T")[0]}.bind(this)})},initDrawControl(){this.drawControl&&this.mymap.removeControl(this.drawControl),L.drawLocal.draw.toolbar.actions.title=this.$t("map.drawControl.L_drawLocal_draw_toolbar_actions_title"),L.drawLocal.draw.toolbar.actions.text=this.$t("map.drawControl.L_drawLocal_draw_toolbar_actions_text"),L.drawLocal.draw.toolbar.finish.title=this.$t("map.drawControl.L_drawLocal_draw_toolbar_finish_title"),L.drawLocal.draw.toolbar.finish.text=this.$t("map.drawControl.L_drawLocal_draw_toolbar_finish_text"),L.drawLocal.draw.toolbar.undo.title=this.$t("map.drawControl.L_drawLocal_draw_toolbar_undo_title"),L.drawLocal.draw.toolbar.undo.text=this.$t("map.drawControl.L_drawLocal_draw_toolbar_undo_text"),L.drawLocal.draw.toolbar.buttons.polygon=this.$t("map.drawControl.L_drawLocal_draw_toolbar_buttons_polygon"),L.drawLocal.draw.handlers.polygon.tooltip.start=this.$t("map.drawControl.L_drawLocal_draw_handlers_polygon_tooltip_start"),L.drawLocal.draw.handlers.polygon.tooltip.cont=this.$t("map.drawControl.L_drawLocal_draw_handlers_polygon_tooltip_cont"),L.drawLocal.draw.handlers.polygon.tooltip.end=this.$t("map.drawControl.L_drawLocal_draw_handlers_polygon_tooltip_end"),L.drawLocal.edit.toolbar.actions.save.title=this.$t("map.drawControl.L_drawLocal_edit_toolbar_actions_save_title"),L.drawLocal.edit.toolbar.actions.save.text=this.$t("map.drawControl.L_drawLocal_edit_toolbar_actions_save_text"),L.drawLocal.edit.toolbar.actions.cancel.title=this.$t("map.drawControl.L_drawLocal_edit_toolbar_actions_cancel_title"),L.drawLocal.edit.toolbar.actions.cancel.text=this.$t("map.drawControl.L_drawLocal_edit_toolbar_actions_cancel_text"),L.drawLocal.edit.toolbar.actions.clearAll.title=this.$t("map.drawControl.L_drawLocal_edit_toolbar_actions_clearAll_title"),L.drawLocal.edit.toolbar.actions.clearAll.text=this.$t("map.drawControl.L_drawLocal_edit_toolbar_actions_clearAll_text"),L.drawLocal.edit.toolbar.buttons.edit=this.$t("map.drawControl.L_drawLocal_edit_toolbar_buttons_edit"),L.drawLocal.edit.toolbar.buttons.editDisabled=this.$t("map.drawControl.L_drawLocal_edit_toolbar_buttons_editDisabled"),L.drawLocal.edit.toolbar.buttons.remove=this.$t("map.drawControl.L_drawLocal_edit_toolbar_buttons_remove"),L.drawLocal.edit.toolbar.buttons.removeDisabled=this.$t("map.drawControl.L_drawLocal_edit_toolbar_buttons_removeDisabled"),L.drawLocal.edit.handlers.edit.tooltip.text=this.$t("map.drawControl.L_drawLocal_edit_handlers_edit_tooltip_text"),L.drawLocal.edit.handlers.edit.tooltip.subtext=this.$t("map.drawControl.L_drawLocal_edit_handlers_edit_tooltip_subtext"),L.drawLocal.edit.handlers.remove.tooltip.text=this.$t("map.drawControl.L_drawLocal_edit_handlers_remove_tooltip_text"),this.drawControl=new L.Control.Draw({draw:{polyline:!1,polygon:{allowIntersection:!1,drawError:{color:"red",timeout:2e3}},rectangle:!1,circle:!1,marker:!1,circlemarker:!1},edit:{featureGroup:this.drawnItems}}),this.drawControl.setPosition(this.gcDrawcontrolPosition),this.mymap.addControl(this.drawControl)},getParcelTotalCount:function(e){this.isloading=!0,this.api_err_msg="";let t;t=e?e+"&count=True":"&count=True",console.debug("getParcelTotalCount()"),console.debug("GET "+this.getApiUrl("/parcels")+t),axios({method:"GET",url:this.getApiUrl("/parcels")+t}).then(function(t){if(200===t.status){var i=t.data;if("key is not authorized"==i.content)return this.api_err_msg=this.$t("api_msg.unauthorized_key")+"<br>"+this.$t("api_msg.support"),void(this.isloading=!1);if("api key validity expired"==i.content)return this.api_err_msg=this.$t("api_msg.invalid_key")+"<br>"+this.$t("api_msg.support"),void(this.isloading=!1);if("count"in i){if(this.total_parcel_count=i.count,this.total_parcel_count<this.pagingStep?this.pagingStep=this.total_parcel_count:this.pagingStep=250,0==this.total_parcel_count)return;this.currentParcelID>0?this.getAllParcels(this.currentParcelID,this.offset,e):this.getAllParcels(void 0,this.offset,e)}}}.bind(this)).catch(e=>{console.log("err= "+e)})},getAllParcels:function(e,t,i){this.isloading=!0,this.api_err_msg="";let a="&limit=6000";t&&(a=a+"&offset="+t),i&&(a+=i),console.debug("getAllParcels()"),console.debug("GET "+this.getApiUrl("/parcels")+a),axios({method:"GET",url:this.getApiUrl("/parcels")+a}).then(function(t){if(200===t.status){var i=t.data;if("key is not authorized"==i.content)return this.api_err_msg=this.$t("api_msg.unauthorized_key")+"<br>"+this.$t("api_msg.support"),void(this.isloading=!1);if("api key validity expired"==i.content)return this.api_err_msg=this.$t("api_msg.invalid_key")+"<br>"+this.$t("api_msg.support"),void(this.isloading=!1);if(this.parcels=[],0==i.content.length)return;for(var a=0;a<i.content.length;a++){var n=i.content[a];this.parcels.push(n)}try{e?(this.currentParcelID=e,console.debug("setting "+e+" parcel id as current!"),this.handleCurrentParcelIDchange(-1,this.currentParcelID)):(console.debug("setting first parcel as current!"),this.currentParcelID=this.parcels[0].parcel_id,this.currentParcelID==this.parcels[0].parcel_id&&this.handleCurrentParcelIDchange(-1,this.parcels[0].parcel_id),console.debug("currentParcelID: "+this.currentParcelID))}catch(e){console.log("error selecting parcel_id"),console.log(e)}}}.bind(this)).catch(e=>{console.log("err= "+e)})},handleCurrentParcelIDchange:function(){console.debug("methods - handleCurrentParcelIDchange");try{this.disableTimeSlider(!0)}catch(e){console.debug("could not disable timeslider.")}if(this.currentRasterIndex=0,console.debug(this.currentParcelID),this.currentParcelID>0){this.filterDetailData();try{document.getElementById("btnDeleteParcel_"+this.gcWidgetId).disabled=!1}catch(e){}if("visible"!=this.selectedProduct){try{document.getElementById("btnQueryIndexValue_"+this.gcWidgetId).disabled=!1}catch(e){}try{document.getElementById("btnToggleLegend_"+this.gcWidgetId).disabled=!1}catch(e){}}}else{try{document.getElementById("btnDeleteParcel_"+this.gcWidgetId).disabled=!0}catch(e){}try{document.getElementById("btnQueryIndexValue_"+this.gcWidgetId).disabled=!0}catch(e){}try{document.getElementById("btnToggleLegend_"+this.gcWidgetId).disabled=!0}catch(e){}}},filterDetailData:function(){console.debug("methods - filterDetailData"),this.getParcelsAttributes(this.currentParcelID)},getParcelsAttributes(e){const t="/parcels/"+e;console.debug("getParcelsAttributes()"),console.debug("GET "+this.getApiUrl(t)),axios({method:"GET",url:this.getApiUrl(t)}).then(function(t){if(200===t.status){var i=t.data,a=this.getCurrentParcel();i.content.length>0&&(console.debug(a),Vue.set(a,"area",i.content[0].area),Vue.set(a,"planting",i.content[0].planting),Vue.set(a,"harvest",i.content[0].harvest),Vue.set(a,"startdate",i.content[0].startdate),Vue.set(a,"enddate",i.content[0].enddate),Vue.set(a,"lastupdate",i.content[0].lastupdate),Vue.set(a,"centroid",i.content[0].centroid),Vue.set(a,"geometry",i.content[0].geometry),this.map_addParcel(i.content[0].geometry),this.getParcelsProductData(e,this.selectedProduct,this.selectedSource))}}.bind(this)).catch(e=>{console.log("err= "+e)})},getParcelsProductData:function(e,t,i){this.isloading=!0;const a="/parcels/"+e+"/"+t;let n="&source="+i+"&order=date";this.currentTimeseries=[],console.debug("getParcelsProductData()"),console.debug("GET "+this.getApiUrl(a)+n),axios({method:"GET",url:this.getApiUrl(a)+n}).then(function(e){if(200===e.status){var t=e.data;let i=this.getCurrentParcel();if(t.content.length>0){Vue.set(i,"timeseries",t.content),this.currentTimeseries=t.content;try{this.activeMapActions.includes("edit")||this.initTimeline()}catch(e){}this.showCurrentRaster();try{this.disableTimeSlider(!1)}catch(e){}this.isloading=!1}}}.bind(this)).catch(e=>{console.log("err= "+e)})},getCurrentParcel:function(){if(this.currentParcelID>0)return this.parcels.filter(e=>e.parcel_id+""==this.currentParcelID+"")[0]},getTimeSeries:function(){if(this.currentParcelID>0){var e=this.getCurrentParcel();if(e.timeseries)return e.timeseries}},getCurrentRaster:function(){if(console.debug("methods - getCurrentRaster"),this.currentParcelID>0){var e=this.getCurrentParcel();if(e&&e.timeseries)return e.timeseries[this.currentRasterIndex]}},showCurrentRaster:function(){console.debug("methods - showCurrentRaster");var e=this.getCurrentRaster();if(e){const t=e.png;let i="&colormap="+this.colormap;this.map_addRaster(this.getApiUrl(t)+i,e.bounds),this.activeMapActions.includes("legend")&&this.showLegend(e);try{this.prepareDownloadImageLink()}catch(e){console.debug("could not prepare download image link.")}}},showLegend:function(e){if("visible"!=e.product){const t="/parcels/"+this.currentParcelID+"/"+e.product+"/"+e.source+"/"+e.raster_id+".png";let i,a="&legend=true&colormap="+this.colormap,n=this.getApiUrl(t)+a;return console.debug("showLegend()"),console.debug("GET "+n),"variations"==e.product?(document.getElementById("mapLegendContent_"+this.gcWidgetId).innerHTML='<span style="font-size: 13px"><b>Legend</b></span><br><img class="mapLegendContentImage" id="mapLegendContentImage_'+this.gcWidgetId+'" src="" title="The dark blue value stands for the minimum NDVI value in the parcel and dark red indicates the maximum NDVI values within the parcel for the measurement date"><br><span>min NDVI max</span>',(i=new Image).onload=function(){document.getElementById("mapLegendContentImage_"+this.gcWidgetId).src=i.src,document.getElementById("mapLegendContent_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("mapLegendContentImage_"+this.gcWidgetId).style.opacity=1}.bind(this),void(i.src=n)):"vitality"==e.product?(document.getElementById("mapLegendContent_"+this.gcWidgetId).innerHTML='<span style="font-size: 13px"><b>Legend</b></span><br><img class="mapLegendContentImage" id="mapLegendContentImage_'+this.gcWidgetId+'" title="The brown value means no living green vegetation (NDVI value <= 0.1)and dark green means dense living green vegetation (NDVI value >= 0.9)"><br><span style="padding-left: 8px; padding-right: 20px;">0.1 NDVI 0.9</span>',(i=new Image).onload=function(){document.getElementById("mapLegendContentImage_"+this.gcWidgetId).src=i.src,document.getElementById("mapLegendContent_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("mapLegendContentImage_"+this.gcWidgetId).style.opacity=1}.bind(this),void(i.src=n)):(document.getElementById("mapLegendContent_"+this.gcWidgetId).innerHTML='<span style="font-size: 13px"><b>Legend</b></span><br><img class="mapLegendContentImage" id="mapLegendContentImage_'+this.gcWidgetId+'" title=""><br><span style="padding-left: 8px; padding-right: 20px;">min Index max</span>',(i=new Image).onload=function(){document.getElementById("mapLegendContentImage_"+this.gcWidgetId).src=i.src,document.getElementById("mapLegendContent_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("mapLegendContentImage_"+this.gcWidgetId).style.opacity=1}.bind(this),void(i.src=n))}document.getElementById("mapLegendContent_"+this.gcWidgetId).classList.add("is-hidden")},getIndexValueforCoordinate(e){const t="/parcels/"+this.currentParcelID+"/"+this.selectedProduct+"/"+this.getCurrentRaster().source+"/"+this.getCurrentRaster().raster_id;let i="&lat="+e.lat+"&lon="+e.lng;console.debug("GET "+this.getApiUrl(t)+i),axios({method:"GET",url:this.getApiUrl(t)+i}).then(function(e){if(200===e.status){var t=e.data;t.content.length>0&&this.popup.setContent('<span class="is-large"><b>'+this.$t("map.popups.indexValue")+": "+this.formatDecimal(t.content[0].pixel_value)+"</span>")}}.bind(this)).catch(e=>{console.log("err= "+e)})},createParcelAction:function(){try{this.activeMapActions.includes("query")&&this.disableQueryBtn()}catch(e){console.debug("could not disable query button.")}if(this.activeMapActions.includes("edit")){try{this.disableCreateParcelBtn()}catch(e){}this.newParcel={key:this.apiKey,geometry:"",crop:"",planting:"",harvest:"",name:"",entity:"",id:"",status:""}}else document.getElementById("innerContainer_"+this.gcWidgetId).classList.remove("is-inline"),document.getElementById("innerContainer_"+this.gcWidgetId).classList.add("is-flex"),document.getElementById("map_"+this.gcWidgetId).style.width="70%",this.mymap.invalidateSize(),document.getElementById("divCreateParcel_"+this.gcWidgetId).classList.remove("is-hidden"),document.getElementById("divNewParcelMsg_"+this.gcWidgetId).innerHTML="",this.map_startEditing(),this.activeMapActions.includes("edit")||this.activeMapActions.push("edit"),this.newParcel.key=this.apiKey},deleteParcelAction:function(){confirm("Do you really want to delete parcel "+this.currentParcelID+"?\n This action is not reversible!","Delete Parcel")&&this.deleteParcel(this.currentParcelID)},deleteParcel:function(e){document.getElementById("btnDeleteParcel_"+this.gcWidgetId).classList.add("is-loading");const t="/parcels/"+e;console.debug("deleteParcel()"),console.debug("DELETE "+this.getApiUrl(t)),axios({method:"DELETE",url:this.getApiUrl(t),headers:{"Content-Type":"application/json",Accept:"application/json"}}).then(function(e){200===e.status&&(""===e.data&&console.log("parcel marked for deletion."),setTimeout(function(){this.destroyMap(),this.initMap(),this.currentParcelID=-1,this.getParcelTotalCount(this.filterString),document.getElementById("btnDeleteParcel_"+this.gcWidgetId).classList.remove("is-loading"),this.isloading=!1}.bind(this),5e3))}.bind(this)).catch(e=>{console.log("err= "+e)})},registerParcel:function(){document.getElementById("btnRegisterParcel_"+this.gcWidgetId).classList.add("is-loading");let e=JSON.stringify(this.newParcel);console.debug("registerParcel()"),console.debug("POST "+this.getApiUrl("/parcels/","POST")),axios({method:"POST",url:this.getApiUrl("/parcels/","POST"),headers:{"Content-Type":"application/json",Accept:"application/json"},data:e}).then(function(e){if(200===e.status){console.debug(e.data);var t=e.data;document.getElementById("divNewParcelMsg_"+this.gcWidgetId).classList.remove("is-hidden"),t.errors.length>0&&(document.getElementById("divNewParcelMsg_"+this.gcWidgetId).innerHTML="Errors: "+t.errors+"<br>"),t.messages&&(document.getElementById("divNewParcelMsg_"+this.gcWidgetId).innerHTML="Response: "+t.messages.status+"<br>",this.newParcel.status=t.status),0==t.errors.length&&(this.newParcel.id=t.id,this.parcels=[],this.getParcelTotalCount(this.filterString)),document.getElementById("btnRegisterParcel_"+this.gcWidgetId).classList.remove("is-loading")}}.bind(this)).catch(e=>{console.log("err= "+e)})},queryIndexValueAction:function(){try{this.activeMapActions.includes("edit")&&this.disableCreateParcelBtn()}catch(e){}try{this.activeMapActions.includes("query")?this.disableQueryBtn():(this.activeMapActions.includes("query")||this.activeMapActions.push("query"),document.getElementById("map_"+this.gcWidgetId).getElementsByClassName("leaflet-interactive")[0].style.cursor="crosshair",this.mymap.dragging.disable(),this.mymap.doubleClickZoom.disable(),this.mymap.on("click",function(e){if(this.parcelLayer.getBounds().contains(e.latlng)){this.getIndexValueforCoordinate(e.latlng);var t=e.latlng;this.popup.setLatLng(t).openOn(this.mymap),this.lastLatLng=e.latlng}}.bind(this)))}catch(e){console.debug("could not disable query button.")}},map_addParcel:function(e){this.parcelLayer.clearLayers(),this.geojsonFeature={type:"Feature",properties:{name:"parcel"},geometry:e},this.parcelLayer.addData(this.geojsonFeature),this.parcelLayer.bringToFront(),this.parcelLayer.setStyle({opacity:.5,fillOpacity:0,color:"yellow"}),this.mymap.fitBounds(this.parcelLayer.getBounds())},map_addRaster:function(e,t){console.log("map_addRaster()"),console.log("GET "+e),this.imageLayer=L.imageOverlay(e,t),this.imageLayer.on("load",this.onImageLayerLoad),this.imageLayerGroup.addLayer(this.imageLayer),this.imageLayer.bringToFront()},onImageLayerLoad:function(e){if(console.log("image ready!"),this.imageLayer.setOpacity(1),this.activeMapActions.includes("legend"))try{document.getElementById("mapLegendContentImage_"+this.gcWidgetId).style.opacity=1}catch(e){}let t="brightness("+document.getElementById("inpBrightnessSlider_"+this.gcWidgetId).value+") opacity("+(1-parseFloat(document.getElementById("inpTransparencySlider_"+this.gcWidgetId).value))+")",i=document.getElementById("map_"+this.gcWidgetId).getElementsByClassName("leaflet-image-layer");for(var a=0;a<i.length;a++)i[a].style.filter=t;setTimeout(function(){try{let e=this.imageLayerGroup.getLayers();if(e.length>1){let t=e[e.length-2];this.imageLayerGroup.removeLayer(t)}}catch(e){console.debug(e)}}.bind(this),this.gcImageChangeInterval)},map_removeParcel:function(){this.parcelLayer.clearLayers()},map_removeAllRasters:function(){this.imageLayerGroup.clearLayers()},map_startEditing:function(){this.initDrawControl(),this.mymap.addLayer(this.drawnItems)},map_endEditing:function(){try{this.drawnItems.clearLayers(),this.mymap.removeLayer(this.drawnItems),this.mymap.removeControl(this.drawControl),this.drawControl=void 0}catch(e){}},addControlPlaceholders:function(e){var t=e._controlCorners,i="leaflet-",a=e._controlContainer;function n(e,n){var s=i+e+" "+i+n;t[e+n]=L.DomUtil.create("div",s,a)}n("verticalcenter","left"),n("verticalcenter","right")},prepareDownloadImageLink:function(e){console.debug("prepareDownloadImageLink");let t=this.getCurrentRaster(),i=["png","tif"];if(t){document.getElementById("downloadImage_"+this.gcWidgetId).classList.remove("is-hidden");for(var a=0;a<i.length;a++){const e=t.png.replace(".png","."+n);let n=i[a],s=this.getApiUrl(e);"png"==n&&(s=s+"&colormap="+this.colormap,document.getElementById("btnDownloadImagePng_"+this.gcWidgetId).href=s,document.getElementById("btnDownloadImagePng_"+this.gcWidgetId).download=t.source+"_"+t.raster_id+"."+n),"tif"==n&&(document.getElementById("btnDownloadImageTif_"+this.gcWidgetId).href=s,document.getElementById("btnDownloadImageTif_"+this.gcWidgetId).download=t.source+"_"+t.raster_id+"."+n)}}else document.getElementById("downloadImage_"+this.gcWidgetId).classList.add("is-hidden")},growLayerControl:function(e){document.getElementById("btnLayerControl_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("layerControlContent_"+this.gcWidgetId).classList.remove("is-hidden")},shrinkLayerControl:function(e){document.getElementById("layerControlContent_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("btnLayerControl_"+this.gcWidgetId).classList.remove("is-hidden")},growImageControl:function(e){document.getElementById("btnDownloadImage_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("downloadImageContent_"+this.gcWidgetId).classList.remove("is-hidden")},shrinkImageControl:function(e){document.getElementById("downloadImageContent_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("btnDownloadImage_"+this.gcWidgetId).classList.remove("is-hidden")},disableQueryBtn:function(){this.removeFromArray(this.activeMapActions,"query"),document.getElementById("map_"+this.gcWidgetId).getElementsByClassName("leaflet-interactive").length>0&&(document.getElementById("map_"+this.gcWidgetId).getElementsByClassName("leaflet-interactive")[0].style.cursor="pointer",this.mymap.dragging.enable(),this.mymap.doubleClickZoom.enable(),this.mymap.off("click"))},disableCreateParcelBtn:function(){document.getElementById("divCreateParcel_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("innerContainer_"+this.gcWidgetId).classList.add("is-inline"),document.getElementById("innerContainer_"+this.gcWidgetId).classList.remove("is-flex"),document.getElementById("map_"+this.gcWidgetId).style.width="100%",this.mymap.invalidateSize(),this.map_endEditing(),this.removeFromArray(this.activeMapActions,"edit"),document.getElementById("divNewParcelMsg_"+this.gcWidgetId).innerHTML="",document.getElementById("divNewParcelMsg_"+this.gcWidgetId).classList.add("is-hidden")},containerSizeChange(e){this.mymap.invalidateSize()},initTimeline:function(){this.timeLine&&(this.timeLine.off("click"),this.timeLine.destroy());let e=this.getCurrentParcel(),t=(new Date).getTime();var i,a={width:"auto",height:"100%",type:"box",showCurrentTime:!1,clickToUse:!1,selectable:!1,editable:!1,moveable:!0,stack:!1,orientation:"bottom",showMajorLabels:!1,showMinorLabels:!0,zoomMin:6048e5,zoomMax:1.2*(new Date(this.getCurrentParcel().enddate)-new Date(this.getCurrentParcel().startdate).getTime()),snap:function(e,t,i){return 864e5*Math.round(e/864e5)}};(i=new vis.DataSet).add([{id:1,start:e.startdate,type:"point",className:"start",group:1},{id:2,start:e.planting,type:"point",className:"planting",group:1},{id:3,start:e.harvest,type:"point",className:"harvest",title:e.harvest,group:1},{id:4,start:t,type:"point",className:"today",group:1},{id:5,start:e.enddate,type:"point",className:"end",group:1}]),i.add(e.timeseries.map(function(e,t){return{id:t+6,start:new Date(e.date+" 00:00:00"),type:"point",className:"special",title:e.date,group:1}})),this.timeLine=new vis.Timeline(document.getElementById("timeline_"+this.gcWidgetId),i,a),this.timeLine.on("click",function(t){console.log(t.item);let i=this.timeLine.itemsData.get(t.item);if(i&&"special"==i.className){let t=e.timeseries.map(e=>e.date).indexOf(i.start.simpleDate());t>=0&&(this.currentRasterIndex=t)}}.bind(this)),this.timeLine.on("timechanged",function(t){let i=new Date(this.timeLine.itemSet.options.snap(t.time)).simpleDate(),a=e.timeseries.map(e=>e.date).indexOf(i);a>=0&&(this.currentRasterIndex=a)}.bind(this));let n=this.getCurrentParcel();n&&(console.debug("setting first marker on: "+n.timeseries[this.currentRasterIndex].date),this.showCurrentTimeMarker(n.timeseries[this.currentRasterIndex].date))},startPauseVideo:function(){if(console.log("startPauseVideo()"),this.isPlaying)this.isPlaying=!1,document.getElementById("player_"+this.gcWidgetId).children.btnPlayerOnOff.innerHTML='<i class="fas fa-play"></i>',clearInterval(this.myTimer),document.getElementById("player_"+this.gcWidgetId).children.btnPlayerOnOff.classList.remove("is-active");else{this.isPlaying=!0,document.getElementById("player_"+this.gcWidgetId).children.btnPlayerOnOff.classList.add("is-active"),document.getElementById("player_"+this.gcWidgetId).children.btnPlayerOnOff.innerHTML='<i class="fas fa-pause"></i>';var e=this.getTimeSeries().length;clearInterval(this.myTimer),this.myTimer=setInterval(function(){this.currentTimeSliderPosition<=e&&(this.currentTimeSliderPosition==e&&(this.currentTimeSliderPosition=0),this.currentRasterIndex=this.currentTimeSliderPosition+"",this.currentTimeSliderPosition++)}.bind(this),this.gcImageChangeInterval)}},forwardTimeSeries:function(){var e=parseInt(this.currentRasterIndex);(e+=1)>=0&&e<this.getTimeSeries().length&&(this.currentRasterIndex=e+"")},backwardTimeSeries:function(){var e=parseInt(this.currentRasterIndex);(e-=1)>=0&&e<this.getTimeSeries().length&&(this.currentRasterIndex=e+"")},disableTimeSlider:function(e){document.getElementById("player_"+this.gcWidgetId).children.btnPlayerOnOff.disabled=e},showCurrentTimeMarker:function(e){if(this.timeLine){try{this.timeLine.removeCustomTime("current")}catch(e){}this.timeLine.addCustomTime(new Date(e).getTime(),"current")}},toggleLegend:function(){this.activeMapActions.includes("legend")?(this.removeFromArray(this.activeMapActions,"legend"),document.getElementById("mapLegendContent_"+this.gcWidgetId).classList.add("is-hidden")):(this.showLegend(this.getCurrentRaster()),this.activeMapActions.push("legend"))},toggleMapOptions:function(){this.gcOptionsCollapsed=!this.gcOptionsCollapsed},toggleColormapOptions:function(e){["visible","vitality","variations"].includes(e)?(this.colormap="",this.colormapEnabled=!1):this.colormapEnabled=!0},filterDatasourceProductCompat:function(e,t){console.debug("filterDatasourceProductCompat("+e+")");let i={landsat8:["visible","vitality","variations","ndvi","ndwi","savi","evi2","npcri"],sentinel2:["visible","vitality","variations","ndvi","ndre1","ndre2","ndre3","ndwi","savi","evi2","cire","npcri"]};return e.length>0?t.filter(t=>i[e].includes(t)):t.filter(e=>i.sentinel2.includes(e))},getClosestTimeSeriesIndex:function(e){const t=this.getCurrentParcel(),i=this.getClosestDate(t.timeseries.map(e=>new Date(e.date)),new Date(e));return console.debug("closest date of given date "+e+" is "+i.simpleDate()),t.timeseries.map(e=>e.date).indexOf(i.simpleDate())},removeFromArray:function(e,t){let i=e.indexOf(t);return i>-1&&e.splice(i,1),e},formatDecimal:function(e,t){var i=100;return isNaN(parseFloat(e))?NaN:(1==t&&(i=10),2==t&&(i=100),3==t&&(i=1e3),4==t&&(i=1e4),5==t&&(i=1e5),Math.ceil(e*i)/i)},capitalize:function(e){return"string"!=typeof e?"":e.charAt(0).toUpperCase()+e.slice(1)},isDateValid:function(e){return!isNaN(new Date(e))},getClosestDate:function(e,t){return console.debug("getClosestDate()"),e.sort(function(e,i){return Math.abs(t-e)-Math.abs(t-i)})[0]},fillDates:function(e,t){for(var i=new Date(e),a=new Date(t),n=[],s=i;a>=s;)n.push(s),s=s.addDays(1);return n},loadJSscript:function(e,t){let i=document.createElement("script");i.src=e,i.async=!0,document.body.appendChild(i),i.onload=function(){t()}},changeLanguage(){this.$i18n.locale=this.currentLanguage}}});