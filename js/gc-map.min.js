"use strict";Date.prototype.addDays=function(a){var b=new Date(this.valueOf());return b.setDate(b.getDate()+a),b},Date.prototype.simpleDate=function(){var a=this.getFullYear(),b=this.getMonth()+1,c=this.getDate();return a+"-"+(1===b.toString().length?"0"+b:b)+"-"+(1===c.toString().length?"0"+c:c)},Vue.config.silent=!1,Vue.component("gc-map",{props:{mapid:{type:String,default:"map1",required:!0},basemap:{type:String,default:"osm"},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},parcelId:{default:-1},datasource:{type:String,default:""},products:{type:String,default:"visible,vitality,variations,ndvi,ndwi,ndre1,ndre2,savi,evi2,cire,npcri"},imageChangeInterval:{type:String,default:"400"},tools:{type:String,default:"edit,delete,query,legend,downloadImage,productSelector,video"}},template:'<div :id="this.mapid" class="is-inline">\n\n              \x3c!-- watermark --\x3e\n              <div class="is-inline-block is-pulled-right" style="opacity: 0.65; position: relative; top: 0rem; margin-bottom: 0.5rem;">\n                <span style="verticalalign: top; font-size: 0.7rem;">powered by</span><br>\n                <img src="img/logo.png" alt="geo|cledian" style="width: 100px; margin: -10px 0;">\n              </div>\n            \n              <p class="mapOptionsTitle is-size-6 is-orange is-inline-block" style="margin-bottom: 1.0rem; cursor: pointer;" \n                  v-on:click="toggleMapOptions">\n               Map options \n               <i class="fas fa-angle-down fa-sm"></i>\n              </p>\n              <div :id="\'mapOptions_\'+mapid" class="mapOptions is-horizontal is-flex is-hidden">\n              <div class="is-horizontal is-flex">\n                <div class="field is-vertical">\n                  <div class="field-label">\n                    <label class="label has-text-left is-grey"> Colormap </label></div>\n                  <div class="field-body">\n                    <div class="select is-small">\n                      <select id="selColormap" v-model="colormap" disabled>\n                          <option value="" selected>Default</option>\n                          <option value="variations">Variations (relative)</option>\n                          <option value="vitality">Vitality</option>\n                          <option value="ndvi">NDVI</option>\n                          <option value="ndre1">NDRE1</option>\n                          <option value="ndre2">NDRE2</option>\n                          <option value="ndwi">NDWI</option>\n                          <option value="ndwi_fc">NDWI Forest conifer</option>\n                          <option value="ndwi_fb">NDWI Forest broadleaf</option>\n                          <option value="savi">SAVI</option>\n                          <option value="evi2">EVI2</option>\n                          <option value="cire">CIRE</option>\n                          <option value="npcri">NPCRI</option>\n                          <option value="pseudocolor">Pseudocolor (relative)</option>\n                          <option value="redblue">Redblue (relative)</option>\n                          <option value="bluered">Bluered (relative)</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                \x3c!-- image options --\x3e\n                <div class="field is-vertical">\n                <div class="field">\n                  <div class="field-label">\n                    <label class="label has-text-left is-grey"> Image Brightness </label></div>\n                  <div class="field-body">\n                    <div class="is-small">\n                      <input :id="\'inpBrightnessSlider_\' + this.mapid" type="range" class="slider is-small is-orange" min="0.5" max="10.0" value="1.0" step="0.1" \n                          v-model="imageBrightness">\n                      <button class="button is-small is-orange is-light" style="vertical-align: middle !important;" title="Reset" v-on:click="imageBrightness=1.0;">\n                        <i class="fas fa-undo fa"></i>\n                      </button>\n                    </div>\n                  </div>\n              </div>\n              <div class="field">\n                <div class="field-label">\n                  <label class="label has-text-left is-grey"> Transparency </label></div>\n                <div class="field-body">\n                  <div class="is-small">\n                    <input :id="\'inpTransparencySlider_\'+ this.mapid" type="range" class="slider is-small is-orange" min="0.0" max="1.0" value="0.0" step="0.1"\n                        v-model="imageTransparency">\n                    <button class="button is-small is-orange is-light" style="vertical-align: middle !important;" title="Reset" v-on:click="imageTransparency=0.0;">\n                      <i class="fas fa-undo fa"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\x3c!-- image options --\x3e\n            </div>\x3c!-- map options --\x3e\n\n            <div :id="\'map_\'+ this.mapid" class="gc-map">\n            \x3c!-- mobile: onclick and onblur events instead of onmouseover and onmouseout --\x3e\n            <div :id="\'layerControl_\'+mapid" class="layerControl" v-on:mouseover="growLayerControl" \n                                    v-on:mouseout="shrinkLayerControl" \n                                    v-on:click="growLayerControl" \n                                    v-on:blur="shrinkLayerControl">\n              <button gc-map :id="\'btnLayerControl_\'+mapid" class="button is-light is-orange">\n                <img src="img/layers.png" width="18px" height="18px">\n              </button>\n              <div :id="\'layerControlContent_\'+mapid" class="layerControlContent is-hidden" style="display: inline-grid;">\n                <input :id="\'rdBasemap1_\'+mapid" type="radio" class="is-checkradio is-orange is-small" :name="\'basemap_\'+mapid" \n                    value="arcgis" v-model="currentBasemap"  v-if="this.isArcGISValid">\n                <label :for="\'rdBasemap1_\'+mapid" class="is-orange is-small"  v-if="this.isArcGISValid">ArcGIS Online</label>\n                <input :id="\'rdBasemap2_\'+mapid" type="radio" class="is-checkradio is-orange is-small" :name="\'basemap_\'+mapid" \n                value="osm" v-model="currentBasemap"> \n                <label :for="\'rdBasemap2_\'+mapid" class="is-orange is-small">OpenstreetMap</label>\n                <input :id="\'rdBasemap3_\'+mapid" type="radio" class="is-checkradio is-orange is-small" :name="\'basemap_\'+mapid"\n                    value="google" v-model="currentBasemap" v-if="isGoogleValid"> \n                <label :for="\'rdBasemap3_\'+mapid" class="is-orange is-small" v-if="isGoogleValid">Google Hybrid</label>\n              <hr>\n                <input :id="\'cbOperational1_\'+mapid" type="checkbox" class="is-checkradio is-orange is-small"\n                  v-model="parcelLayerVisible">\n                <label :for="\'cbOperational1_\'+mapid" class="is-orange is-small">Parcels</label>\n                <input :id="\'cbOperational2_\'+mapid" type="checkbox" class="is-checkradio is-orange is-small" \n                    v-model="imageLayerVisible"> \n                <label :for="\'cbOperational2_\'+mapid" class="is-orange is-small">Images</label>\n              </div>\n            </div>\x3c!-- layerControl --\x3e\n\n            <div :id="\'divMapBtns_\'+mapid" class="divMapBtns" style="padding-top: 42px; padding-left: 6px; float: left;">\n                <button gc-map :id="\'btnCreateParcel_\'+mapid" title="Create New Parcel" class=" button is-light is-orange" \n                        v-on:click="createParcelAction" v-if="availableTools.includes(\'edit\')">\n                  <i class="fas fa-edit"></i>\n                </button>\n              \n              <button gc-map :id="\'btnDeleteParcel_\'+mapid" title="Delete Parcel" class="button is-light is-orange" \n                      v-on:click="deleteParcelAction" v-if="availableTools.includes(\'delete\')" disabled>\n                <i class="fas fa-trash-alt"></i>\n              </button>\n              \n                <button gc-map :id="\'btnQueryIndexValue_\'+mapid" title="Query Index Value" class="button is-light is-orange" \n                      v-on:click="queryIndexValueAction" v-if="availableTools.includes(\'query\')" disabled>\n                  <i class="fas fa-info-circle"></i>\n                </button>\n                <button gc-map :id="\'btnToggleLegend_\'+mapid" title="Toggle legend" class="button is-light is-orange"\n                      v-on:click="toggleLegend"\n                      v-on:mouseover=""\n                      v-if="availableTools.includes(\'legend\')">\n                  <i class="fas fa-list-ul"></i>\n                </button>\n                \x3c!-- URL will be injected here in the a-tags after sucessful load of raster in map --\x3e\n                \x3c!-- Download is implemented this way because png is shown in browser per default; but it\n                      should download the image directly --\x3e\n                <div :id="\'downloadImage_\'+mapid" class="downloadImage has-text-centered"\n                                                                 v-if="availableTools.includes(\'downloadImage\')"\n                                                                  v-on:mouseover="growImageControl" \n                                                                  v-on:mouseout="shrinkImageControl" \n                                                                  v-on:click="growImageControl" \n                                                                  v-on:blur="shrinkImageControl">\n\n                  <button gc-map :id="\'btnDownloadImage_\'+mapid" class="button is-orange is-light">\n                    <i class="fas fa-download"></i>\n                  </button>\n                  <div :id="\'downloadImageContent_\'+mapid" class="is-hidden" style="display: inline-grid;">\n                    <a gc-map :id="\'btnDownloadImagePng_\'+mapid" title="Download as PNG" class="button is-light is-orange" \n                        href="" download="" target="_blank" style="padding-left: 0.45rem; padding-right: 0.45rem;">\n                        \x3c!-- line-height: 0.75rem; --\x3e\n                        <div style="display: inline-grid; vertical-align: middle;">\n                          <span class="is-size-7" style="line-height: 0.75rem;"><i class="fas fa-download"></i></span>\n                          <span class="is-size-7" style="line-height: 0.75rem;">png</span>\n                        </div>\n                      </a>\n                    <a gc-map :id="\'btnDownloadImageTif_\'+mapid" title="Download as TIF" class="button is-light is-orange" \n                      href="" download="" target="_blank" style="padding-left: 0.45rem; padding-right: 0.45rem;">\n                      <div style="display: inline-grid; vertical-align: middle;">\n                        <span class="is-size-7" style="line-height: 0.75rem;"><i class="fas fa-download"></i></span>\n                        <span class="is-size-7" style="line-height: 0.75rem;">tif</span>\n                      </div>\n                    </a>\n                  </span>\n                  </div>\n                </div>\n              \x3c!--/div --\x3e\n            </div>\n            <div :id="\'mapSpinner_\'+mapid" class="mapSpinner spinner is-hidden">\n              <div class="rect1"></div>\n              <div class="rect2"></div>\n              <div class="rect3"></div>\n              <div class="rect4"></div>\n              <div class="rect5"></div>\n            </div>\n            <div :id="\'mapLegendContent_\'+mapid" class="mapLegendContent has-text-justified is-hidden">\n            </div>\n            \x3c!-- product selector --\x3e\n            <div class="field product-selector"\n                  v-if="availableTools.includes(\'productSelector\')">\n              <div class="field-body">\n                <div class="select">\n                <select v-model="selectedProduct" class="is-small">\n                <option v-for="p in availableProducts" v-bind:value="p">\n                  <span v-if="[\'vitality\',\'variations\',\'visible\'].includes(p)">{{capitalize(p)}}</span>\n                  <span v-else>{{p.toUpperCase()}}</span>\n                </option>\n                </select>\n                </div>\n              </div>\n            </div> \x3c!-- product selector --\x3e\n          </div>\x3c!-- map --\x3e\n          \x3c!-- divCreateParcel --\x3e\n          \x3c!-- flex-grow 4 is looks better for aligning label and field --\x3e\n          <div class="is-hidden" :id="\'divCreateParcel_\'+this.mapid" style="margin: 20px!important; flex-grow: 4 !important;"> \n              <p class="title is-5 is-orange"><i class="fas fa-plus-circle fa-lg"></i> New parcel attributes </p>  \n              <div class="field is-horizontal">\n                <div class="field-label is-normal"><label class="label is-grey has-text-left"> API-Key </label></div>\n                <div class="field-body">\n                  <input type="text" class="input is-normal"\n                          placeholder="[00000000-0000-0000-0000-00000000000]" v-model="newParcel.key">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-normal"><label class="label is-grey has-text-left"> Crop </label></div>\n                <div class="field-body">\n                    <input type="text" class="input is-normal"\n                          placeholder="[crop]" v-model="newParcel.crop">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-normal"><label class="label is-grey has-text-left"> Seeding </label></div>\n                <div class="field-body">\n                    <input :id="\'inpPlantDate_\'+ mapid" type="text" class="input is-normal"\n                          placeholder="[YYYY-MM-DD]" v-model="newParcel.planting" v-on:change="">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                  <div class="field-label is-normal"><label class="label is-grey has-text-left"> Harvest</label></div>\n                  <div class="field-body">\n                      <input :id="\'inpHarvestDate_\'+ mapid" type="text" class="input is-normal"\n                            placeholder="[YYYY-MM-DD]" v-model="newParcel.harvest" v-on:change="">\n                  </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-normal"><label class="label is-grey has-text-left"> Name </label></div>\n                <div class="field-body">\n                    <input type="text" class="input is-normal"\n                          placeholder="[name]" v-model="newParcel.name">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-normal"><label class="label is-grey has-text-left"> Entity </label></div>\n                <div class="field-body">\n                  <input type="text" class="input is-normal"\n                            placeholder="[entity]" v-model="newParcel.entity">\n                </div>\n              </div>\n              <div class="field is-horizontal">\n                <div class="field-label is-normal"><label class="label is-grey has-text-left"> Promotion </label></div>\n                <div class="field-body" style="position: relative; top: 0.5rem;"> \x3c!-- centers checkbox --\x3e\n                  <input type="checkbox" class="content is-normal"\n                            v-model="newParcel.promotion">\n                </div>\n              </div>\n              <div class="has-text-centered">\n                <button :id="\'btnRegisterParcel_\'+this.mapid" class="button is-light is-orange" v-on:click="registerParcel()">\n                    <i class="fas fa-save fa-sm"></i><span class="content"> Register Parcel </span>\n                </button>\n              </div>\n              <div :id="\'divNewParcelMsg_\'+this.mapid" class="notification is-light is-grey is-normal is-hidden">\n                  \n              </div>\n            </div>\x3c!-- divCreateParcel --\x3e\n            <div :id="\'timelineContainer_\'+this.mapid" class="is-inline is-hidden" v-if="availableTools.includes(\'video\')">\n            \x3c!-- video --\x3e\n            <div :id="\'player_\'+this.mapid" class="gc-player is-pulled-left" style="z-index: 1000; position: relative; left: 0px; bottom: 0px; margin-bottom: 0px!important;">\n              <button id="btnPlayerOnOff" class="button is-outlined is-orange" \n                          v-on:click="startPauseVideo" style="height: 48px!important; width: 42px!important;" disabled>\n                    <i class="fas fa-play"></i>\n              </button>\n              \x3c!-- button id="btnPlayerBackward" class="button is-outlined is-orange is-small" v-on:click="backwardTimeSeries" \n                          >\n                    <i class="fas fa-step-backward"></i>\n              </button>\n              <button id="btnPlayerForward" class="button is-outlined is-orange is-small" v-on:click="forwardTimeSeries" \n                      >\n                <i class="fas fa-step-forward"></i>\n              </button --\x3e\n            </div>\n            <div :id="\'timeline_\'+this.mapid">\n            </div>\n            </div>\n            </div>\x3c!-- mapid --\x3e',data:function(){return{mymap:{},osmBasemap:{},esriBasemap:{},googleHybridBasemap:{},baseMaps:{arcgis:{},osm:{},google:{}},geojsonFeature:{},parcelLayer:{},imageLayer:void 0,imageLayerGroup:{},drawnItems:{},drawControl:{},newParcel:{key:"",geometry:"",crop:"",planting:"",harvest:"",name:"",entity:"",id:"",status:""},parcelLayerVisible:!0,imageLayerVisible:!0,colormap:"",imageBrightness:1,imageTransparency:0,currentBasemap:this.basemap,selectedProduct:"",currentRasterIndex:0,parcels:[],apiKey:this.gcApikey,apiHost:this.gcHost,apiUrl:"https://"+this.gcHost+"/agknow/api/v3",offset:0,pagingStep:250,total_parcel_count:250,mapLegendVisible:!1,popup:void 0,lastLatLng:{lat:0,lng:0},timeline:void 0,isPlaying:!1,myTimer:{},currentTimeSliderPosition:0,inpPlantDatePicker:void 0,inpHarvestDatePicker:void 0,isGoogleValid:!0,isArcGISValid:!1}},computed:{currentParcelID:{get:function(){return this.parcelId},set:function(newValue){this.parcelId=newValue}},availableProducts:{get:function(){return this.products.split(",")},set:function(newValue){this.products=newValue,this.toggleProductsDatasourceCompat(newValue)}},selectedSource:{get:function(){return this.datasource},set:function(newValue){this.datasource=newValue}},availableTools:{get:function(){return this.tools.split(",")},set:function(newValue){this.tools=newValue}}},created:function(){},mounted:function(){console.debug("MOUNTED!"),this.initMap()},watch:{currentBasemap:function(newValue,oldValue){console.debug("event - currentBasemapChange"),console.debug("new: "+newValue);let oldLayer=this.baseMaps[oldValue];this.mymap.removeLayer(oldLayer);let newLayer=this.baseMaps[newValue];this.mymap.addLayer(newLayer)},selectedProduct:function(newValue,oldValue){if(newValue!=oldValue)if(console.debug("event - selectedProductChange"),this.toggleColormapOptions(this.selectedProduct),this.currentParcelID>0&this.parcels.length>0&&this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.selectedProduct,this.selectedSource),"visible"!=newValue)console.debug("enabling btnQueryIndexValue"),document.getElementById("btnQueryIndexValue_"+this.mapid).disabled=!1,document.getElementById("btnToggleLegend_"+this.mapid).disabled=!1;else{console.debug("disabling btnQueryIndexValue");try{this.disableQueryBtn()}catch(err){}document.getElementById("btnQueryIndexValue_"+this.mapid).disabled=!0,document.getElementById("btnToggleLegend_"+this.mapid).disabled=!0}},selectedSource:function(newValue,oldValue){let p;console.debug("event - selectedSourceChange"),this.map_removeAllRasters(),this.getCurrentParcel().timeseries=[],this.toggleProductsDatasourceCompat(newValue),this.currentParcelID>0&this.parcels.length>0&&(this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.selectedProduct,this.selectedSource),this.currentRasterIndex=0)},parcelId:function(newValue,oldValue){console.debug("event - parcelIdChange"),this.handleCurrentParcelIDchange(newValue,oldValue)},currentRasterIndex:function(newValue,oldValue){if(newValue!=oldValue){console.debug("event - currentRasterIndexChange"),this.currentTimeSliderPosition=parseInt(newValue),this.showCurrentRaster();let p=this.getCurrentParcel(),isQueryActive;p&&this.showCurrentTimeMarker(p.timeseries[newValue].date),document.getElementById("btnQueryIndexValue_"+this.mapid).classList.contains("is-active")&&this.getIndexValueforCoordinate(this.lastLatLng)}},parcelLayerVisible:function(newValue,oldValue){console.debug("event - parcelLayerVisibleChange"),!0===newValue?this.mymap.addLayer(this.parcelLayer):this.mymap.removeLayer(this.parcelLayer)},imageLayerVisible:function(newValue,oldValue){console.debug("event - imageLayerVisibleChange"),newValue!=oldValue&&(!0===newValue?this.imageLayerGroup.addTo(this.mymap):this.imageLayerGroup.removeFrom(this.mymap))},offset:function(newValue,oldValue){console.debug("event - offsetChange")},colormap:function(newValue,oldValue){newValue!=oldValue&&this.showCurrentRaster()},imageBrightness:function(newValue,oldValue){if(newValue!=oldValue){let filterString="brightness("+newValue+") opacity("+(1-this.imageTransparency)+")",images=document.getElementById("map_"+this.mapid).getElementsByClassName("leaflet-image-layer");for(var i=0;i<images.length;i++)images[i].style.filter=filterString}},imageTransparency:function(newValue,oldValue){if(newValue!=oldValue){let filterString="brightness( "+this.imageBrightness+") opacity("+(1-newValue)+")",images=document.getElementById("map_"+this.mapid).getElementsByClassName("leaflet-image-layer");for(var i=0;i<images.length;i++)images[i].style.filter=filterString}}},methods:{initMap:function(){console.debug("initMap()");try{this.mymap=L.map("map_"+this.mapid,{zoomControl:!1})}catch(err){return console.error("Error initializing the map with id '"+this.mapid+"'!"),this.$el.innerHTML="",void this.$destroy()}this.popup=L.popup({autoClose:!0,closeOnClick:!1}).setContent('<span class="is-large"><b>Index value: '),this.toggleProductsDatasourceCompat(this.selectedSource),this.selectedProduct=this.availableProducts[0];let osmUrl="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",osmMapLink='<a href="https://www.openstreetmap.org/">OpenstreetMap</a>';if(this.osmBasemap=new L.tileLayer(osmUrl,{maxZoom:18,attribution:osmMapLink}),this.isArcGISValid){let esriUrl="https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",esriMapLink='Powered by <a href="https://www.esri.com/">ESRI</a> | i-cubed, USDA, USGS, AEX, GeoEye, Getmapping,  Earthstar Geographics, Aerogrid, IGN, IGP, UPR-EGP, Microsoft, DigitalGlobe and the GIS User Community';this.esriBasemap=new L.tileLayer(esriUrl,{maxZoom:20,attribution:esriMapLink})}try{this.googleHybridBasemap=L.gridLayer.googleMutant({type:"hybrid"}),this.isArcGISValid?this.baseMaps={arcgis:this.esriBasemap,osm:this.osmBasemap,google:this.googleHybridBasemap}:this.baseMaps={osm:this.osmBasemap,google:this.googleHybridBasemap},"google"==this.currentBasemap&&this.googleHybridBasemap.addTo(this.mymap),"osm"==this.currentBasemap&&this.osmBasemap.addTo(this.mymap),this.isArcGISValid&&"arcgis"==this.currentBasemap&&this.esriBasemap.addTo(this.mymap)}catch(ex){console.warn("Could not init Google API!"),this.isGoogleValid=!1,this.isArcGISValid?(this.baseMaps={arcgis:this.esriBasemap,osm:this.osmBasemap},"osm"==this.currentBasemap&&this.osmBasemap.addTo(this.mymap),"arcgis"==this.currentBasemap&&this.esriBasemap.addTo(this.mymap)):(this.baseMaps={osm:this.osmBasemap},"osm"==this.currentBasemap&&this.osmBasemap.addTo(this.mymap))}this.parcelLayer=L.geoJson().addTo(this.mymap),this.imageLayerGroup=L.layerGroup().addTo(this.mymap),this.drawnItems=(new L.FeatureGroup).addTo(this.mymap),new L.Control.Zoom({position:"bottomright"}).addTo(this.mymap),this.mymap.on("draw:created",function(e){this.drawnItems.clearLayers(),this.drawnItems.addLayer(e.layer),this.newParcel.geometry=this.drawnItems.toGeoJSON().features[0].geometry}.bind(this)),this.mymap.on("draw:edited",function(e){this.newParcel.geometry=e.layers.toGeoJSON().features[0].geometry,console.debug(this.newParcel.geometry)}.bind(this)),this.mymap.on("draw:drawstart",function(e){this.drawnItems.clearLayers()}.bind(this)),this.mymap.setView(new L.LatLng(48.535,12.152),10),this.addControlPlaceholders(this.mymap);const provider=new window.GeoSearch.OpenStreetMapProvider,searchControl=new window.GeoSearch.GeoSearchControl({provider:provider,autoComplete:!0,autoCompleteDelay:250,animateZoom:!0,autoClose:!0,searchLabel:"Search location",keepResult:!0,position:"bottomright"});this.mymap.addControl(searchControl),this.getParcelTotalCount(""),document.addEventListener("keyup",e=>{"Space"===e.code&&this.startPauseVideo()}),this.loadJSscript("css/bulma-ext/bulma-calendar.min.js",function(){this.inpPlantDatePicker=new bulmaCalendar(document.getElementById("inpPlantDate_"+this.mapid),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:"en",overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.newParcel.planting=a.toISOString().split("T")[0]}.bind(this)}),this.inpHarvestDatePicker=new bulmaCalendar(document.getElementById("inpHarvestDate_"+this.mapid),{startDate:new Date,dateFormat:"yyyy-mm-dd",lang:"en",overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.newParcel.harvest=a.toISOString().split("T")[0]}.bind(this)})}.bind(this))},getParcelTotalCount:function(filterString){let params;params=filterString?"/parcels?key="+this.apiKey+filterString+"&count=True":"/parcels?key="+this.apiKey+"&count=True";let xmlHttp=new XMLHttpRequest,async=!0;console.debug("getParcelTotalCount()"),console.debug("GET "+this.apiUrl+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText);if("count"in tmp){if(this.total_parcel_count=tmp.count,this.total_parcel_count<this.pagingStep?this.pagingStep=this.total_parcel_count:this.pagingStep=250,0==this.total_parcel_count)return;this.parcelId>0?this.getAllParcels(this.currentParcelID,this.offset,filterString):this.getAllParcels(void 0,this.offset,filterString)}}}.bind(this),xmlHttp.open("GET",this.apiUrl+params,!0),xmlHttp.send()},getAllParcels:function(parcel_id,offset,filterString){let limit=6e3,params="/parcels?key="+this.apiKey+"&limit=6000";offset&&(params=params+"&offset="+offset),filterString&&(params+=filterString);let xmlHttp=new XMLHttpRequest,async=!0;console.debug("getAllParcels()"),console.debug("GET "+this.apiUrl+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText);if("key is not authorized"==tmp.content)return;if(this.parcels=[],0==tmp.content.length)return void clearGUI();for(var i=0;i<tmp.content.length;i++){var item=tmp.content[i];this.parcels.push(item)}try{parcel_id?(this.currentParcelID=parcel_id,console.debug("setting "+parcel_id+" parcel id as current!"),this.handleCurrentParcelIDchange(-1,this.currentParcelID)):(console.debug("setting first parcel as current!"),this.currentParcelID=this.parcels[0].parcel_id,this.currentParcelID==this.parcels[0].parcel_id&&this.handleCurrentParcelIDchange(-1,this.parcels[0].parcel_id),console.debug("currentParcelID: "+this.currentParcelID))}catch(err){console.log("error selecting parcel_id"),console.log(err)}}}.bind(this),xmlHttp.open("GET",this.apiUrl+params,!0),xmlHttp.send()},handleCurrentParcelIDchange:function(){console.debug("methods - handleCurrentParcelIDchange");try{this.disableTimeSlider(!0)}catch(err){console.debug("could not disable timeslider.")}if(this.currentRasterIndex=0,console.debug(this.currentParcelID),this.currentParcelID>0){this.filterDetailData();try{document.getElementById("btnDeleteParcel_"+this.mapid).disabled=!1}catch(err){}if("visible"!=this.selectedProduct){try{document.getElementById("btnQueryIndexValue_"+this.mapid).disabled=!1}catch(err){}try{document.getElementById("btnToggleLegend_"+this.mapid).disabled=!1}catch(err){}}}else{try{document.getElementById("btnDeleteParcel_"+this.mapid).disabled=!0}catch(err){}try{document.getElementById("btnQueryIndexValue_"+this.mapid).disabled=!0}catch(err){}try{document.getElementById("btnToggleLegend_"+this.mapid).disabled=!0}catch(err){}}},filterDetailData:function(){console.debug("methods - filterDetailData"),this.getParcelsAttributes(this.currentParcelID)},getParcelsAttributes(parcel_id){var params="/parcels/"+parcel_id+"/?key="+this.apiKey,xmlHttp=new XMLHttpRequest,async=!0;console.debug("getParcelsAttributes()"),console.debug("GET "+this.apiUrl+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText),row=this.getCurrentParcel();tmp.content.length>0&&(console.debug(row),Vue.set(row,"area",tmp.content[0].area),Vue.set(row,"planting",tmp.content[0].planting),Vue.set(row,"harvest",tmp.content[0].harvest),Vue.set(row,"startdate",tmp.content[0].startdate),Vue.set(row,"enddate",tmp.content[0].enddate),Vue.set(row,"lastupdate",tmp.content[0].lastupdate),Vue.set(row,"centroid",tmp.content[0].centroid),Vue.set(row,"geometry",tmp.content[0].geometry),this.map_addParcel(tmp.content[0].geometry),this.getParcelsProductData(parcel_id,this.selectedProduct,this.selectedSource))}}.bind(this),xmlHttp.open("GET",this.apiUrl+params,!0),xmlHttp.send()},getParcelsProductData:function(parcel_id,productName,source){document.getElementById("mapSpinner_"+this.mapid).classList.remove("is-hidden");let params="/parcels/"+parcel_id+"/"+productName+"?key="+this.apiKey+"&source="+source+"&order=date",xmlHttp=new XMLHttpRequest,async=!0;console.debug("getParcelsProductData()"),console.debug("GET "+this.apiUrl+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){let tmp=JSON.parse(xmlHttp.responseText),row=this.getCurrentParcel();if(tmp.content.length>0){Vue.set(row,"timeseries",tmp.content);try{document.getElementById("btnCreateParcel_"+this.mapid).classList.contains("is-active")||this.initTimeline()}catch(err){}this.showCurrentRaster();try{this.disableTimeSlider(!1)}catch(err){}document.getElementById("mapSpinner_"+this.mapid).classList.add("is-hidden")}}}.bind(this),xmlHttp.open("GET",this.apiUrl+params,!0),xmlHttp.send()},getCurrentParcel:function(){if(this.currentParcelID>0)return this.parcels.filter(p=>p.parcel_id+""==this.currentParcelID+"")[0]},getTimeSeries:function(){if(this.currentParcelID>0){var p=this.getCurrentParcel();if(p.timeseries)return p.timeseries}},getCurrentRaster:function(){if(console.debug("methods - getCurrentRaster"),this.currentParcelID>0){var p=this.getCurrentParcel();if(p&&p.timeseries)return p.timeseries[this.currentRasterIndex]}},showCurrentRaster:function(){console.debug("methods - showCurrentRaster");var row=this.getCurrentRaster();if(row){this.map_addRaster(this.apiUrl+row.png+"?key="+this.apiKey+"&colormap="+this.colormap,row.bounds),this.mapLegendVisible&&this.showLegend(row);try{this.prepareDownloadImageLink()}catch(err){console.debug("could not prepare download image link.")}}},showLegend:function(row){if("visible"!=row.product){var parcel_id=this.currentParcelID,legendUrl=this.apiUrl+"/parcels/"+parcel_id+"/"+row.product+"/"+row.source+"/"+row.raster_id+".png?key="+this.apiKey+"&legend=true&colormap="+this.colormap;let downloadingImage;return(console.debug("showLegend()"),console.debug("GET "+legendUrl),"variations"==row.product?(document.getElementById("mapLegendContent_"+this.mapid).innerHTML='<span style="font-size: 13px"><b>Legend</b></span><br><img class="mapLegendContentImage" id="mapLegendContentImage_'+this.mapid+'" src="" title="The dark blue value stands for the minimum NDVI value in the parcel and dark red indicates the maximum NDVI values within the parcel for the measurement date"><br><span>min NDVI max</span>',downloadingImage=new Image,downloadingImage.onload=function(){document.getElementById("mapLegendContentImage_"+this.mapid).src=downloadingImage.src,document.getElementById("mapLegendContent_"+this.mapid).classList.remove("is-hidden"),document.getElementById("mapLegendContentImage_"+this.mapid).style.opacity=1}.bind(this),void(downloadingImage.src=legendUrl)):"vitality"==row.product?(document.getElementById("mapLegendContent_"+this.mapid).innerHTML='<span style="font-size: 13px"><b>Legend</b></span><br><img class="mapLegendContentImage" id="mapLegendContentImage_'+this.mapid+'" title="The brown value means no living green vegetation (NDVI value <= 0.1)and dark green means dense living green vegetation (NDVI value >= 0.9)"><br><span style="padding-left: 8px; padding-right: 20px;">0.1 NDVI 0.9</span>',downloadingImage=new Image,downloadingImage.onload=function(){document.getElementById("mapLegendContentImage_"+this.mapid).src=downloadingImage.src,document.getElementById("mapLegendContent_"+this.mapid).classList.remove("is-hidden"),document.getElementById("mapLegendContentImage_"+this.mapid).style.opacity=1}.bind(this),void(downloadingImage.src=legendUrl)):(document.getElementById("mapLegendContent_"+this.mapid).innerHTML='<span style="font-size: 13px"><b>Legend</b></span><br><img class="mapLegendContentImage" id="mapLegendContentImage_'+this.mapid+'" title=""><br><span style="padding-left: 8px; padding-right: 20px;">min Index max</span>',downloadingImage=new Image,downloadingImage.onload=function(){document.getElementById("mapLegendContentImage_"+this.mapid).src=downloadingImage.src,document.getElementById("mapLegendContent_"+this.mapid).classList.remove("is-hidden"),document.getElementById("mapLegendContentImage_"+this.mapid).style.opacity=1}.bind(this),void(downloadingImage.src=legendUrl)))}document.getElementById("mapLegendContent_"+this.mapid).classList.add("is-hidden")},getIndexValueforCoordinate(latlng){var parcel_id,productName,source,raster_id,params="/parcels/"+this.currentParcelID+"/"+this.selectedProduct+"/"+this.getCurrentRaster().source+"/"+this.getCurrentRaster().raster_id+"?key="+this.apiKey+"&lat="+latlng.lat+"&lon="+latlng.lng,xmlHttp=new XMLHttpRequest,async=!0;console.debug("GET "+this.apiUrl+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText);tmp.content.length>0&&this.popup.setContent('<span class="is-large"><b>Index value: '+this.formatDecimal(tmp.content[0].pixel_value)+"</span>")}}.bind(this),xmlHttp.open("GET",this.apiUrl+params,!0),xmlHttp.send()},createParcelAction:function(){try{let isQueryActive;document.getElementById("btnQueryIndexValue_"+this.mapid).classList.contains("is-active")&&this.disableQueryBtn()}catch(err){console.debug("could not disable query button.")}let isActive;if(document.getElementById("btnCreateParcel_"+this.mapid).classList.contains("is-active")){try{this.disableCreateParcelBtn(),document.getElementById(this.mapid).getElementsByClassName("mapOptionsTitle")[0].classList.remove("is-hidden"),document.getElementById("timelineContainer_"+this.mapid).classList.remove("is-hidden")}catch(err){}this.newParcel={key:this.apiKey,geometry:"",crop:"",planting:"",harvest:"",name:"",entity:"",id:"",status:""}}else{try{document.getElementById("timelineContainer_"+this.mapid).classList.add("is-hidden")}catch(err){}document.getElementById(this.mapid).getElementsByClassName("mapOptionsTitle")[0].classList.add("is-hidden"),document.getElementById("mapOptions_"+this.mapid).classList.add("is-hidden"),document.getElementById(this.mapid).getElementsByClassName("mapOptionsTitle")[0].children[0].classList.remove("is-active"),document.getElementById(this.mapid).classList.remove("is-inline"),document.getElementById(this.mapid).classList.add("is-flex"),document.getElementById("map_"+this.mapid).style.height="480px",document.getElementById("map_"+this.mapid).style.width="60%",this.mymap.invalidateSize(),document.getElementById("divCreateParcel_"+this.mapid).classList.remove("is-hidden"),document.getElementById("divNewParcelMsg_"+this.mapid).innerHTML="",this.map_startEditing();try{document.getElementById("btnCreateParcel_"+this.mapid).classList.add("is-active"),document.getElementById("btnCreateParcel_"+this.mapid).classList.add("is-dark"),document.getElementById("btnCreateParcel_"+this.mapid).classList.remove("is-light")}catch(err){}this.newParcel.key=this.apiKey}},deleteParcelAction:function(){confirm("Do you really want to delete parcel "+this.currentParcelID+"?\n This action is not reversible!","Delete Parcel")&&this.deleteParcel(this.currentParcelID)},deleteParcel:function(parcel_id){document.getElementById("btnDeleteParcel_"+this.mapid).classList.add("is-loading");var params="/parcels/"+parcel_id+"?key="+this.apiKey;console.debug("deleteParcel()"),console.debug("DELETE "+this.apiUrl+params);var xmlHttp=new XMLHttpRequest,async=!0;xmlHttp.onreadystatechange=function(){4==xmlHttp.readyState&&(console.debug("response "+xmlHttp.responseText+" - "+xmlHttp.status),"1"==xmlHttp.responseText&&console.log("parcel deleted."),"0"==xmlHttp.responseText&&console.log("error deleting parcel."),""==xmlHttp.responseText&&console.log("parcel marked for deletion."),document.getElementById("btnDeleteParcel_"+this.mapid).classList.remove("is-loading"))}.bind(this),xmlHttp.open("DELETE",this.apiUrl+params,!0),xmlHttp.setRequestHeader("Content-type","application/json"),xmlHttp.send(null)},registerParcel:function(){document.getElementById("btnRegisterParcel_"+this.mapid).classList.add("is-loading");var params="/parcels/",postData=JSON.stringify(this.newParcel);console.debug("registerParcel()"),console.debug("POST "+this.apiUrl+params);var xmlHttp=new XMLHttpRequest,async=!0;xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){console.debug(xmlHttp.responseText);var tmp=JSON.parse(xmlHttp.responseText);document.getElementById("divNewParcelMsg_"+this.mapid).classList.remove("is-hidden"),tmp.errors.length>0&&(document.getElementById("divNewParcelMsg_"+this.mapid).innerHTML="Errors: "+tmp.errors+"<br>"),tmp.messages&&(document.getElementById("divNewParcelMsg_"+this.mapid).innerHTML="Response: "+tmp.messages.status+"<br>",this.newParcel.status=tmp.status),0==tmp.errors.length&&(this.newParcel.id=tmp.id,this.parcels=[],this.getParcelTotalCount(filterString)),document.getElementById("btnRegisterParcel_"+this.mapid).classList.remove("is-loading")}}.bind(this),xmlHttp.open("POST",this.apiUrl+params,!0),xmlHttp.setRequestHeader("Content-type","application/json"),xmlHttp.send(postData)},queryIndexValueAction:function(){try{let isEditActive;document.getElementById("btnCreateParcel_"+this.mapid).classList.contains("is-active")&&this.disableEditBtn()}catch(err){}try{let isActive;document.getElementById("btnQueryIndexValue_"+this.mapid).classList.contains("is-active")?this.disableQueryBtn():(document.getElementById("btnQueryIndexValue_"+this.mapid).classList.add("is-active"),document.getElementById("btnQueryIndexValue_"+this.mapid).classList.remove("is-light"),document.getElementById("btnQueryIndexValue_"+this.mapid).classList.add("is-dark"),document.getElementById("map_"+this.mapid).getElementsByClassName("leaflet-interactive")[0].style.cursor="crosshair",this.mymap.dragging.disable(),this.mymap.doubleClickZoom.disable(),this.mymap.on("click",function(e){if(this.parcelLayer.getBounds().contains(e.latlng)){this.getIndexValueforCoordinate(e.latlng);var popLocation=e.latlng;this.popup.setLatLng(popLocation).openOn(this.mymap),this.lastLatLng=e.latlng}}.bind(this)))}catch(err){console.debug("could not disable query button.")}},map_addParcel:function(geom){this.parcelLayer.clearLayers(),this.geojsonFeature={type:"Feature",properties:{name:"parcel"},geometry:geom},this.parcelLayer.addData(this.geojsonFeature),this.parcelLayer.bringToFront(),this.parcelLayer.setStyle({opacity:.5,fillOpacity:0,color:"yellow"}),this.mymap.fitBounds(this.parcelLayer.getBounds())},map_addRaster:function(imageUrl,bounds){console.log("map_addRaster()"),console.log("GET "+imageUrl),this.imageLayer=L.imageOverlay(imageUrl,bounds),this.imageLayer.on("load",this.onImageLayerLoad),this.imageLayerGroup.addLayer(this.imageLayer),this.imageLayer.bringToFront()},onImageLayerLoad:function(e){if(console.log("image ready!"),this.imageLayer.setOpacity(1),this.mapLegendVisible)try{document.getElementById("mapLegendContentImage_"+this.mapid).style.opacity=1}catch(err){}let brightness,transparency,filterString="brightness("+document.getElementById("inpBrightnessSlider_"+this.mapid).value+") opacity("+(1-parseFloat(document.getElementById("inpTransparencySlider_"+this.mapid).value))+")",images=document.getElementById("map_"+this.mapid).getElementsByClassName("leaflet-image-layer");for(var i=0;i<images.length;i++)images[i].style.filter=filterString;setTimeout(function(){try{let allImageLayers=this.imageLayerGroup.getLayers();if(allImageLayers.length>1){let prevLyr=allImageLayers[allImageLayers.length-2];this.imageLayerGroup.removeLayer(prevLyr)}}catch(err){console.debug(err)}}.bind(this),this.imageChangeInterval)},map_removeParcel:function(){this.parcelLayer.clearLayers()},map_removeAllRasters:function(){this.imageLayerGroup.clearLayers()},map_startEditing:function(){this.drawControl=new L.Control.Draw({draw:{polyline:!1,polygon:{allowIntersection:!1,drawError:{color:"red",timeout:2e3}},rectangle:!1,circle:!1,marker:!1,circlemarker:!1},edit:{featureGroup:this.drawnItems}}),this.mymap.addLayer(this.drawnItems),this.drawControl.setPosition("verticalcenterright"),this.mymap.addControl(this.drawControl)},map_endEditing:function(){try{this.drawnItems.clearLayers(),this.mymap.removeLayer(this.drawnItems),this.mymap.removeControl(this.drawControl)}catch(err){}},addControlPlaceholders:function(map){var corners=map._controlCorners,l="leaflet-",container=map._controlContainer;function createCorner(vSide,hSide){var className=l+vSide+" "+l+hSide;corners[vSide+hSide]=L.DomUtil.create("div",className,container)}createCorner("verticalcenter","left"),createCorner("verticalcenter","right")},prepareDownloadImageLink:function(format){console.debug("prepareDownloadImageLink");let row=this.getCurrentRaster(),formats=["png","tif"];if(row){document.getElementById("downloadImage_"+this.mapid).classList.remove("is-hidden");for(var i=0;i<formats.length;i++){let format=formats[i],url=this.apiUrl+row.png.replace(".png","."+format)+"?key="+this.apiKey;"png"==format&&(url=url+"&colormap="+this.colormap,document.getElementById("btnDownloadImagePng_"+this.mapid).href=url,document.getElementById("btnDownloadImagePng_"+this.mapid).download=row.source+"_"+row.raster_id+"."+format),"tif"==format&&(document.getElementById("btnDownloadImageTif_"+this.mapid).href=url,document.getElementById("btnDownloadImageTif_"+this.mapid).download=row.source+"_"+row.raster_id+"."+format)}}else document.getElementById("downloadImage_"+this.mapid).classList.add("is-hidden")},growLayerControl:function(event){document.getElementById("btnLayerControl_"+this.mapid).classList.add("is-hidden"),document.getElementById("layerControlContent_"+this.mapid).classList.remove("is-hidden")},shrinkLayerControl:function(event){document.getElementById("layerControlContent_"+this.mapid).classList.add("is-hidden"),document.getElementById("btnLayerControl_"+this.mapid).classList.remove("is-hidden")},growImageControl:function(event){document.getElementById("btnDownloadImage_"+this.mapid).classList.add("is-hidden"),document.getElementById("downloadImageContent_"+this.mapid).classList.remove("is-hidden")},shrinkImageControl:function(event){document.getElementById("downloadImageContent_"+this.mapid).classList.add("is-hidden"),document.getElementById("btnDownloadImage_"+this.mapid).classList.remove("is-hidden")},disableQueryBtn:function(){document.getElementById("btnQueryIndexValue_"+this.mapid).classList.remove("is-active"),document.getElementById("btnQueryIndexValue_"+this.mapid).classList.remove("is-dark"),document.getElementById("btnQueryIndexValue_"+this.mapid).classList.add("is-light"),document.getElementById("map_"+this.mapid).getElementsByClassName("leaflet-interactive").length>0&&(document.getElementById("map_"+this.mapid).getElementsByClassName("leaflet-interactive")[0].style.cursor="pointer",this.mymap.dragging.enable(),this.mymap.doubleClickZoom.enable(),this.mymap.off("click"))},disableCreateParcelBtn:function(){document.getElementById("divCreateParcel_"+this.mapid).classList.add("is-hidden"),document.getElementById(this.mapid).classList.add("is-inline"),document.getElementById(this.mapid).classList.remove("is-flex"),document.getElementById("map_"+this.mapid).style.height="360px",document.getElementById("map_"+this.mapid).style.width="auto",this.mymap.invalidateSize(),this.map_endEditing(),document.getElementById("btnCreateParcel_"+this.mapid).classList.remove("is-active"),document.getElementById("btnCreateParcel_"+this.mapid).classList.remove("is-dark"),document.getElementById("btnCreateParcel_"+this.mapid).classList.add("is-light"),document.getElementById("divNewParcelMsg_"+this.mapid).innerHTML="",document.getElementById("divNewParcelMsg_"+this.mapid).classList.add("is-hidden")},initTimeline:function(){this.timeLine&&(this.timeLine.off("click"),this.timeLine.destroy());let parcel=this.getCurrentParcel(),today=(new Date).getTime();const MS_IN_A_DAY=864e5;var _visOptions={width:"auto",height:"100%",type:"box",showCurrentTime:!1,clickToUse:!1,selectable:!1,editable:!1,moveable:!0,stack:!1,orientation:"bottom",showMajorLabels:!1,showMinorLabels:!0,zoomMin:6048e5,zoomMax:1.2*(new Date(this.getCurrentParcel().enddate)-new Date(this.getCurrentParcel().startdate).getTime()),snap:function(date,scale,step){return 864e5*Math.round(date/864e5)}},_visDs1;(_visDs1=new vis.DataSet).add([{id:1,start:parcel.startdate,type:"point",className:"start",group:1},{id:2,start:parcel.planting,type:"point",className:"planting",group:1},{id:3,start:parcel.harvest,type:"point",className:"harvest",title:parcel.harvest,group:1},{id:4,start:today,type:"point",className:"today",group:1},{id:5,start:parcel.enddate,type:"point",className:"end",group:1}]),_visDs1.add(parcel.timeseries.map((function(a,b){return{id:b+6,start:new Date(a.date+" 00:00:00"),type:"point",className:"special",title:a.date,group:1}}))),this.timeLine=new vis.Timeline(document.getElementById("timeline_"+this.mapid),_visDs1,_visOptions),this.timeLine.on("click",function(a){console.log(a.item);let item=this.timeLine.itemsData.get(a.item);if(item&&"special"==item.className){let r=parcel.timeseries.map(d=>d.date).indexOf(item.start.simpleDate());r>=0&&(this.currentRasterIndex=r)}}.bind(this)),this.timeLine.on("timechanged",function(a){let snappedDate=new Date(this.timeLine.itemSet.options.snap(a.time)).simpleDate(),r=parcel.timeseries.map(r=>r.date).indexOf(snappedDate);r>=0&&(this.currentRasterIndex=r)}.bind(this));let p=this.getCurrentParcel();p&&(console.debug("setting first marker on: "+p.timeseries[this.currentRasterIndex].date),this.showCurrentTimeMarker(p.timeseries[this.currentRasterIndex].date)),document.getElementById("timelineContainer_"+this.mapid).classList.remove("is-hidden")},startPauseVideo:function(){if(console.log("startPauseVideo()"),this.isPlaying)this.isPlaying=!1,document.getElementById("player_"+this.mapid).children.btnPlayerOnOff.innerHTML='<i class="fas fa-play"></i>',clearInterval(this.myTimer),document.getElementById("player_"+this.mapid).children.btnPlayerOnOff.classList.remove("is-active");else{this.isPlaying=!0,document.getElementById("player_"+this.mapid).children.btnPlayerOnOff.classList.add("is-active"),document.getElementById("player_"+this.mapid).children.btnPlayerOnOff.innerHTML='<i class="fas fa-pause"></i>';var timeSeriesCount=this.getTimeSeries().length;clearInterval(this.myTimer),this.myTimer=setInterval(function(){this.currentTimeSliderPosition<=timeSeriesCount&&(this.currentTimeSliderPosition==timeSeriesCount&&(this.currentTimeSliderPosition=0),this.currentRasterIndex=this.currentTimeSliderPosition+"",this.currentTimeSliderPosition++)}.bind(this),this.imageChangeInterval)}},forwardTimeSeries:function(){var j=parseInt(this.currentRasterIndex);(j+=1)>=0&&j<this.getTimeSeries().length&&(this.currentRasterIndex=j+"")},backwardTimeSeries:function(){var j=parseInt(this.currentRasterIndex);(j-=1)>=0&&j<this.getTimeSeries().length&&(this.currentRasterIndex=j+"")},disableTimeSlider:function(state){document.getElementById("player_"+this.mapid).children.btnPlayerOnOff.disabled=state},showCurrentTimeMarker:function(date){if(this.timeLine){try{this.timeLine.removeCustomTime("current")}catch(err){}this.timeLine.addCustomTime(new Date(date).getTime(),"current")}},toggleLegend:function(){this.mapLegendVisible=document.getElementById("btnToggleLegend_"+this.mapid).classList.contains("is-active"),this.mapLegendVisible?(document.getElementById("btnToggleLegend_"+this.mapid).classList.remove("is-active"),document.getElementById("btnToggleLegend_"+this.mapid).classList.add("is-light"),document.getElementById("btnToggleLegend_"+this.mapid).classList.remove("is-dark"),document.getElementById("mapLegendContent_"+this.mapid).classList.add("is-hidden"),this.mapLegendVisible=!1):(this.showLegend(this.getCurrentRaster()),document.getElementById("btnToggleLegend_"+this.mapid).classList.add("is-active"),document.getElementById("btnToggleLegend_"+this.mapid).classList.remove("is-light"),document.getElementById("btnToggleLegend_"+this.mapid).classList.add("is-dark"),this.mapLegendVisible=!0)},toggleMapOptions:function(){let isMapOptionsActive=!1;isMapOptionsActive=!document.getElementById("mapOptions_"+this.mapid).classList.contains("is-hidden"),isMapOptionsActive?(document.getElementById("mapOptions_"+this.mapid).classList.add("is-hidden"),document.getElementById(this.mapid).getElementsByClassName("mapOptionsTitle")[0].children[0].classList.remove("is-active")):(document.getElementById(this.mapid).getElementsByClassName("mapOptionsTitle")[0].children[0].classList.add("is-active"),document.getElementById("mapOptions_"+this.mapid).classList.remove("is-hidden"))},toggleColormapOptions:function(selectedProduct){let legProducts;["visible","vitality","variations"].includes(selectedProduct)?(this.colormap="",document.getElementById("selColormap").disabled=!0):document.getElementById("selColormap").disabled=!1},toggleProductsDatasourceCompat:function(source){console.debug("toggleProductsDatasourceCompat("+source+")");let matrix={landsat8:["visible","vitality","variations"],sentinel2:["visible","vitality","variations","ndvi","ndre1","ndre2","ndre3","ndwi","savi","evi2","cire","npcri"]};source.length>0?this.products=matrix[source].join(","):this.products=matrix.sentinel2.join(",")},formatDecimal:function(decimal,numberOfDecimals){var factor=100;return isNaN(parseFloat(decimal))?NaN:(1==numberOfDecimals&&(factor=10),2==numberOfDecimals&&(factor=100),3==numberOfDecimals&&(factor=1e3),4==numberOfDecimals&&(factor=1e4),5==numberOfDecimals&&(factor=1e5),Math.ceil(decimal*factor)/factor)},capitalize:function(s){return"string"!=typeof s?"":s.charAt(0).toUpperCase()+s.slice(1)},fillDates:function(a,b){for(var c=new Date(a),d=new Date(b),e=[],f=c;d>=f;)e.push(f),f=f.addDays(1);return e},loadJSscript:function(url,callback){let script=document.createElement("script");script.src=url,script.async=!0,document.body.appendChild(script),script.onload=function(){callback()}}}});